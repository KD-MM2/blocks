{
    "id": "navbar17",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "navbar17.jpg",
    "thumbnail": "navbar17-4x3.webp",
    "description": "A navigation component with dynamic indicator for active links and a mobile menu with an animated icon for toggling.",
    "createdAt": "2025-03-16T01:37:40.415Z",
    "dependencies": [
        "lucide-react",
        "react"
    ],
    "registryDependencies": [
        {
            "name": "button",
            "registryId": "shadcn",
            "registryItemUrl": "button",
            "docsUrl": "https://ui.shadcn.com/docs/components/button"
        },
        {
            "name": "navigation-menu",
            "registryId": "shadcn",
            "registryItemUrl": "navigation-menu",
            "docsUrl": "https://ui.shadcn.com/docs/components/navigation-menu"
        },
        {
            "name": "popover",
            "registryId": "shadcn",
            "registryItemUrl": "popover",
            "docsUrl": "https://ui.shadcn.com/docs/components/popover"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "navbar"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Apr 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": true,
    "slug": "navbar17",
    "collection": "block",
    "group": "navbar",
    "code": "\"use client\";\n\nimport { Menu, X } from \"lucide-react\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  NavigationMenu,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n} from \"@/components/ui/navigation-menu\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\n\nconst NAV_LOGO = {\n  url: \"https://www.shadcnblocks.com\",\n  src: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/shadcnblockscom-icon.svg\",\n  alt: \"logo\",\n  title: \"Shadcnblocks.com\",\n};\nconst NAV_ITEMS = [\n  { name: \"Home\", link: \"#\" },\n  { name: \"About\", link: \"#\" },\n  { name: \"Pricing\", link: \"#\" },\n  { name: \"Contact\", link: \"#\" },\n];\n\nconst Navbar17 = () => {\n  const [activeItem, setActiveItem] = useState(NAV_ITEMS[0].name);\n\n  const indicatorRef = useRef<HTMLDivElement>(null);\n  const menuRef = useRef<HTMLUListElement>(null);\n\n  useEffect(() => {\n    const updateIndicator = () => {\n      const activeEl = document.querySelector(\n        `[data-nav-item=\"${activeItem}\"]`,\n      ) as HTMLElement;\n\n      if (activeEl && indicatorRef.current && menuRef.current) {\n        const menuRect = menuRef.current.getBoundingClientRect();\n        const itemRect = activeEl.getBoundingClientRect();\n\n        indicatorRef.current.style.width = `${itemRect.width}px`;\n        indicatorRef.current.style.left = `${itemRect.left - menuRect.left}px`;\n      }\n    };\n    updateIndicator();\n    window.addEventListener(\"resize\", updateIndicator);\n\n    return () => window.removeEventListener(\"resize\", updateIndicator);\n  }, [activeItem]);\n\n  return (\n    <section className=\"py-4\">\n      <nav className=\"container flex items-center justify-between\">\n        {/* Left WordMark */}\n        <a href={NAV_LOGO.url} className=\"flex items-center gap-2\">\n          <img src={NAV_LOGO.src} className=\"max-h-8 w-8\" alt={NAV_LOGO.alt} />\n          <span className=\"text-lg font-semibold tracking-tighter\">\n            {NAV_LOGO.title}\n          </span>\n        </a>\n\n        <NavigationMenu className=\"hidden lg:block\">\n          <NavigationMenuList\n            ref={menuRef}\n            className=\"rounded-4xl flex items-center gap-6 px-8 py-3\"\n          >\n            {NAV_ITEMS.map((item) => (\n              <React.Fragment key={item.name}>\n                <NavigationMenuItem>\n                  <NavigationMenuLink\n                    data-nav-item={item.name}\n                    onClick={() => setActiveItem(item.name)}\n                    className={`relative cursor-pointer text-sm font-medium hover:bg-transparent ${\n                      activeItem === item.name\n                        ? \"text-foreground\"\n                        : \"text-muted-foreground\"\n                    }`}\n                  >\n                    {item.name}\n                  </NavigationMenuLink>\n                </NavigationMenuItem>\n              </React.Fragment>\n            ))}\n            {/* Active Indicator */}\n            <div\n              ref={indicatorRef}\n              className=\"absolute bottom-2 flex h-1 items-center justify-center px-2 transition-all duration-300\"\n            >\n              <div className=\"bg-foreground h-0.5 w-full rounded-t-none transition-all duration-300\" />\n            </div>\n          </NavigationMenuList>\n        </NavigationMenu>\n\n        {/* Mobile Menu Popover */}\n        <MobileNav activeItem={activeItem} setActiveItem={setActiveItem} />\n\n        <div className=\"hidden items-center gap-2 lg:flex\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            className=\"h-10 py-2.5 text-sm font-normal\"\n          >\n            Sign Up\n          </Button>\n        </div>\n      </nav>\n    </section>\n  );\n};\n\nexport { Navbar17 };\n\nconst AnimatedHamburger = ({ isOpen }: { isOpen: boolean }) => {\n  return (\n    <div className=\"group relative size-full\">\n      <div className=\"absolute flex size-full items-center justify-center\">\n        <Menu\n          className={`text-muted-foreground group-hover:text-foreground absolute size-6 transition-all duration-300 ${\n            isOpen ? \"rotate-90 opacity-0\" : \"rotate-0 opacity-100\"\n          }`}\n        />\n        <X\n          className={`text-muted-foreground group-hover:text-foreground absolute size-6 transition-all duration-300 ${\n            isOpen ? \"rotate-0 opacity-100\" : \"-rotate-90 opacity-0\"\n          }`}\n        />\n      </div>\n    </div>\n  );\n};\n\nconst MobileNav = ({\n  activeItem,\n  setActiveItem,\n}: {\n  activeItem: string;\n  setActiveItem: (item: string) => void;\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className=\"block flex h-full items-center lg:hidden\">\n      <Popover open={isOpen} onOpenChange={setIsOpen}>\n        <PopoverTrigger asChild>\n          <Button variant=\"ghost\" size=\"icon\">\n            <AnimatedHamburger isOpen={isOpen} />\n          </Button>\n        </PopoverTrigger>\n\n        <PopoverContent\n          align=\"end\"\n          className=\"relative -right-4 top-4 block w-[calc(100vw-32px)] overflow-hidden rounded-xl p-0 sm:right-auto sm:top-auto sm:w-80 lg:hidden\"\n        >\n          <ul className=\"bg-background text-foreground w-full py-4\">\n            {NAV_ITEMS.map((navItem, idx) => (\n              <li key={idx}>\n                <a\n                  href={navItem.link}\n                  onClick={() => setActiveItem(navItem.name)}\n                  className={`text-foreground flex items-center border-l-[3px] px-6 py-4 text-sm font-medium transition-all duration-75 ${\n                    activeItem === navItem.name\n                      ? \"border-foreground text-foreground\"\n                      : \"text-muted-foreground hover:text-foreground border-transparent\"\n                  }`}\n                >\n                  {navItem.name}\n                </a>\n              </li>\n            ))}\n            <li className=\"flex flex-col px-7 py-2\">\n              <Button variant=\"outline\">Sign Up</Button>\n            </li>\n          </ul>\n        </PopoverContent>\n      </Popover>\n    </div>\n  );\n};\n"
}