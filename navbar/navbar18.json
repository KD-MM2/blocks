{
    "id": "navbar18",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "navbar18.jpg",
    "thumbnail": "navbar18-4x3.webp",
    "description": "A navigation bar with logo, collapsible menus, and a login button. Layout adapts for mobile with a popover menu.",
    "createdAt": "2025-03-16T01:37:40.415Z",
    "dependencies": [
        "lucide-react",
        "react"
    ],
    "registryDependencies": [
        {
            "name": "accordion",
            "registryId": "shadcn",
            "registryItemUrl": "accordion",
            "docsUrl": "https://ui.shadcn.com/docs/components/accordion"
        },
        {
            "name": "button",
            "registryId": "shadcn",
            "registryItemUrl": "button",
            "docsUrl": "https://ui.shadcn.com/docs/components/button"
        },
        {
            "name": "navigation-menu",
            "registryId": "shadcn",
            "registryItemUrl": "navigation-menu",
            "docsUrl": "https://ui.shadcn.com/docs/components/navigation-menu"
        },
        {
            "name": "popover",
            "registryId": "shadcn",
            "registryItemUrl": "popover",
            "docsUrl": "https://ui.shadcn.com/docs/components/popover"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "navbar"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Apr 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": true,
    "slug": "navbar18",
    "collection": "block",
    "group": "navbar",
    "code": "\"use client\";\n\nimport { Menu } from \"lucide-react\";\nimport React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport {\n  Accordion,\n  AccordionContent,\n  AccordionItem,\n  AccordionTrigger,\n} from \"@/components/ui/accordion\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  NavigationMenu,\n  NavigationMenuContent,\n  NavigationMenuItem,\n  NavigationMenuLink,\n  NavigationMenuList,\n  NavigationMenuTrigger,\n  navigationMenuTriggerStyle,\n} from \"@/components/ui/navigation-menu\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\n\nconst NAV_LOGO = {\n  url: \"https://www.shadcnblocks.com\",\n  src: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/shadcnblockscom-icon.svg\",\n  alt: \"logo\",\n  title: \"Shadcnblocks.com\",\n};\n\nconst NAV_ITEMS = [\n  {\n    name: \"Products\",\n    link: \"/\",\n    hasSubmenu: true,\n    submenu: [\n      {\n        title: \"Introduction\",\n        href: \"/docs\",\n        description:\n          \"Re-usable components built using Radix UI and Tailwind CSS.\",\n      },\n      {\n        title: \"Installation\",\n        href: \"/docs/installation\",\n        description: \"How to install dependencies and structure your app.\",\n      },\n      {\n        title: \"Typography\",\n        href: \"/docs/primitives/typography\",\n        description: \"Styles for headings, paragraphs, lists...etc\",\n      },\n    ],\n  },\n  {\n    name: \"Resources\",\n    link: \"/\",\n    hasSubmenu: true,\n    submenu: [\n      {\n        title: \"Alert Dialog\",\n        href: \"/docs/primitives/alert-dialog\",\n        description:\n          \"A modal dialog that interrupts the user with important content and expects a response.\",\n      },\n      {\n        title: \"Hover Card\",\n        href: \"/docs/primitives/hover-card\",\n        description:\n          \"For sighted users to preview content available behind a link.\",\n      },\n      {\n        title: \"Progress\",\n        href: \"/docs/primitives/progress\",\n        description:\n          \"Displays an indicator showing the completion progress of a task, typically displayed as a progress bar.\",\n      },\n      {\n        title: \"Scroll-area\",\n        href: \"/docs/primitives/scroll-area\",\n        description: \"Visually or semantically separates content.\",\n      },\n      {\n        title: \"Tabs\",\n        href: \"/docs/primitives/tabs\",\n        description:\n          \"A set of layered sections of content\u2014known as tab panels\u2014that are displayed one at a time.\",\n      },\n      {\n        title: \"Tooltip\",\n        href: \"/docs/primitives/tooltip\",\n        description:\n          \"A popup that displays information related to an element when the element receives keyboard focus or the mouse hovers over it.\",\n      },\n    ],\n  },\n  { name: \"Integration\", link: \"/\" },\n];\n\nconst Navbar18 = () => {\n  return (\n    <section className=\"bg-muted relative mx-auto flex max-w-full items-center justify-between border border-t-0 px-6 py-3 md:w-fit md:rounded-b-2xl lg:gap-4\">\n      <a href={NAV_LOGO.url} className=\"flex items-center gap-1\">\n        <img src={NAV_LOGO.src} className=\"max-h-5\" alt={NAV_LOGO.alt} />\n      </a>\n\n      <MobileNav />\n\n      <NavigationMenu className=\"hidden md:flex\">\n        <NavigationMenuList className=\"h-full w-full\">\n          {NAV_ITEMS.map((item, index) =>\n            item.hasSubmenu ? (\n              <NavigationMenuItem key={index} className=\"rounded-2xl\">\n                <NavigationMenuTrigger className=\"bg-transparent px-2 py-1 text-xs\">\n                  {item.name}\n                </NavigationMenuTrigger>\n                <NavigationMenuContent className=\"rounded-2xl\">\n                  <ul\n                    className={cn(\n                      \"grid gap-2 p-2\",\n                      item.name === \"Resources\"\n                        ? \"w-[300px] md:w-[350px] md:grid-cols-2 lg:w-[400px]\"\n                        : \"md:w-[150px] lg:w-[200px]\",\n                    )}\n                  >\n                    {item.submenu.map((sub, i) => (\n                      <ListItem\n                        key={sub.title || i}\n                        title={sub.title}\n                        href={sub.href}\n                      >\n                        {sub.description}\n                      </ListItem>\n                    ))}\n                  </ul>\n                </NavigationMenuContent>\n              </NavigationMenuItem>\n            ) : (\n              <NavigationMenuItem key={index}>\n                <NavigationMenuLink\n                  href={item.link}\n                  className={cn(\n                    navigationMenuTriggerStyle(),\n                    \"bg-transparent px-3 py-1.5 text-xs\",\n                  )}\n                >\n                  {item.name}\n                </NavigationMenuLink>\n              </NavigationMenuItem>\n            ),\n          )}\n        </NavigationMenuList>\n      </NavigationMenu>\n\n      <div className=\"hidden md:block\">\n        <Button\n          variant=\"outline\"\n          className=\"h-auto rounded-lg px-3 py-1.5 text-xs\"\n        >\n          Log in\n        </Button>\n      </div>\n    </section>\n  );\n};\n\nconst ListItem = React.forwardRef<\n  React.ElementRef<\"a\">,\n  React.ComponentPropsWithoutRef<\"a\">\n>(({ className, title, children, ...props }, ref) => {\n  return (\n    <li>\n      <NavigationMenuLink asChild>\n        <a\n          ref={ref}\n          className={cn(\n            \"hover:bg-accent hover:text-accent-foreground focus:bg-accent focus:text-accent-foreground block select-none space-y-1 rounded-md p-2 text-xs leading-none no-underline outline-none transition-colors\",\n            className,\n          )}\n          {...props}\n        >\n          <div className=\"text-xs font-medium leading-none\">{title}</div>\n          <p className=\"text-muted-foreground line-clamp-2 text-xs leading-snug\">\n            {children}\n          </p>\n        </a>\n      </NavigationMenuLink>\n    </li>\n  );\n});\nListItem.displayName = \"ListItem\";\n\nconst MobileNav = () => {\n  return (\n    <div className=\"mr-2 flex items-center justify-center md:hidden\">\n      <Popover>\n        <PopoverTrigger>\n          <Menu className=\"text-foreground size-5\" />\n        </PopoverTrigger>\n\n        <PopoverContent\n          align=\"end\"\n          className=\"w-screen max-w-xs overflow-hidden\"\n        >\n          <div className=\"bg-background/80 text-foreground w-full pt-2 backdrop-blur-md\">\n            <Accordion type=\"single\" collapsible className=\"w-full\">\n              {NAV_ITEMS.map((navItem, idx) =>\n                navItem.hasSubmenu ? (\n                  <AccordionItem\n                    key={idx}\n                    value={navItem.name}\n                    className=\"border-b-0\"\n                  >\n                    <AccordionTrigger className=\"hover:bg-accent px-4 py-3 text-xs hover:no-underline\">\n                      <span className=\"text-foreground\">{navItem.name}</span>\n                    </AccordionTrigger>\n                    <AccordionContent className=\"rounded-2xl\">\n                      <div className=\"border-muted ml-4 border-l-2 pl-2\">\n                        <ul className=\"py-1\">\n                          {navItem.submenu &&\n                            navItem.submenu.map((sub, subIdx) => (\n                              <li\n                                key={sub.title || subIdx}\n                                className=\"hover:bg-accent px-2 py-2 text-xs\"\n                              >\n                                <a href={sub.href} className=\"block\">\n                                  {sub.title}\n                                </a>\n                              </li>\n                            ))}\n                        </ul>\n                      </div>\n                    </AccordionContent>\n                  </AccordionItem>\n                ) : (\n                  <div\n                    key={idx}\n                    className=\"hover:bg-accent rounded-lg px-4 py-3 text-xs\"\n                  >\n                    <a\n                      href={navItem.link}\n                      className=\"flex items-center justify-between\"\n                    >\n                      <span className=\"text-foreground\">{navItem.name}</span>\n                    </a>\n                  </div>\n                ),\n              )}\n            </Accordion>\n            <div className=\"flex flex-col gap-2 py-2\">\n              <Button variant=\"secondary\" className=\"px-3 text-xs\">\n                Log in\n              </Button>\n            </div>\n          </div>\n        </PopoverContent>\n      </Popover>\n    </div>\n  );\n};\nexport { Navbar18 };\n"
}