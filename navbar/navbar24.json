{
    "id": "navbar24",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "navbar24.jpg",
    "thumbnail": "navbar24-4x3.webp",
    "description": "A dynamic navbar component featuring an animated dock with interactive icons for navigation linked to different sections.",
    "createdAt": "2025-08-28T06:52:54.394Z",
    "dependencies": [
        "lucide-react",
        "motion",
        "react"
    ],
    "registryDependencies": [],
    "attrs": {
        "type": "block",
        "group": [
            "navbar"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Aug 2025"
        ],
        "registryIds": []
    },
    "figma": true,
    "slug": "navbar24",
    "collection": "block",
    "group": "navbar",
    "code": "\"use client\";\n\nimport {\n  Bell,\n  Heart,\n  Home,\n  LogOut,\n  PanelBottomOpen,\n  Settings,\n  ShoppingCart,\n  User,\n} from \"lucide-react\";\nimport {\n  AnimatePresence,\n  motion,\n  MotionValue,\n  useMotionValue,\n  useSpring,\n  useTransform,\n} from \"motion/react\";\nimport { useRef, useState } from \"react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Navbar24 = () => {\n  const tabs = [\n    {\n      title: \"Home\",\n      icon: <Home />,\n      href: \"#home\",\n    },\n    {\n      title: \"Notifications\",\n      icon: <Bell />,\n      href: \"#notifications\",\n    },\n    {\n      title: \"Profile\",\n      icon: <User />,\n      href: \"#profile\",\n    },\n    {\n      title: \"Settings\",\n      icon: <Settings />,\n      href: \"#settings\",\n    },\n    {\n      title: \"Favorites\",\n      icon: <Heart />,\n      href: \"#favorites\",\n    },\n    {\n      title: \"Cart\",\n      icon: <ShoppingCart />,\n      href: \"#cart\",\n    },\n    {\n      title: \"Logout\",\n      icon: <LogOut />,\n      href: \"#logout\",\n    },\n  ];\n  return (\n    <section className=\"py-32\">\n      <div className=\"container flex justify-center\">\n        <FloatingDock\n          desktopClassName=\"\n        fixed bottom-4 left-1/2 -translate-x-1/2  \"\n          mobileClassName=\"fixed right-6 bottom-6\"\n          items={tabs}\n        />\n      </div>\n    </section>\n  );\n};\nexport { Navbar24 };\n\n// Below is the modified component from Aceternity UI\n// Original source: npx shadcn@latest add https://ui.aceternity.com/registry/floating-dock.json\n// Modified to follow our coding standards and design system\n// We respect copyright and attribution to the original creators\n\nconst FloatingDock = ({\n  items,\n  desktopClassName,\n  mobileClassName,\n}: {\n  items: { title: string; icon: React.ReactNode; href: string }[];\n  desktopClassName?: string;\n  mobileClassName?: string;\n}) => {\n  return (\n    <>\n      <FloatingDockDesktop items={items} className={desktopClassName} />\n      <FloatingDockMobile items={items} className={mobileClassName} />\n    </>\n  );\n};\n\nconst FloatingDockMobile = ({\n  items,\n  className,\n}: {\n  items: { title: string; icon: React.ReactNode; href: string }[];\n  className?: string;\n}) => {\n  const [open, setOpen] = useState(false);\n  return (\n    <div className={cn(\"block md:hidden\", className)}>\n      <AnimatePresence>\n        {open && (\n          <motion.div\n            layoutId=\"nav\"\n            className=\"z-99 absolute inset-x-0 bottom-full mb-2 flex flex-col gap-2\"\n          >\n            {items.map((item, idx) => (\n              <motion.div\n                key={item.title}\n                initial={{ opacity: 0, y: 10 }}\n                animate={{\n                  opacity: 1,\n                  y: 0,\n                }}\n                exit={{\n                  opacity: 0,\n                  y: 10,\n                  transition: {\n                    delay: idx * 0.05,\n                  },\n                }}\n                transition={{ delay: (items.length - 1 - idx) * 0.05 }}\n              >\n                <a\n                  href={item.href}\n                  key={item.title}\n                  className=\"bg-foreground text-muted-foreground flex h-10 w-10 items-center justify-center rounded-xl\"\n                >\n                  <div>{item.icon}</div>\n                </a>\n              </motion.div>\n            ))}\n          </motion.div>\n        )}\n      </AnimatePresence>\n      <button\n        onClick={() => setOpen(!open)}\n        className=\"bg-foreground text-muted-foreground flex h-10 w-10 items-center justify-center rounded-xl\"\n      >\n        <PanelBottomOpen />\n      </button>\n    </div>\n  );\n};\n\nconst FloatingDockDesktop = ({\n  items,\n  className,\n}: {\n  items: { title: string; icon: React.ReactNode; href: string }[];\n  className?: string;\n}) => {\n  const mouseX = useMotionValue(Infinity);\n  return (\n    <motion.div\n      onMouseMove={(e) => mouseX.set(e.pageX)}\n      onMouseLeave={() => mouseX.set(Infinity)}\n      className={cn(\n        \"bg-foreground z-99 mx-auto hidden h-16 items-end items-center justify-center gap-2 rounded-3xl px-5 md:flex\",\n        className,\n      )}\n    >\n      {items.map((item) => (\n        <IconContainer mouseX={mouseX} key={item.title} {...item} />\n      ))}\n    </motion.div>\n  );\n};\n\nfunction IconContainer({\n  mouseX,\n  title,\n  icon,\n  href,\n}: {\n  mouseX: MotionValue;\n  title: string;\n  icon: React.ReactNode;\n  href: string;\n}) {\n  const ref = useRef<HTMLDivElement>(null);\n\n  const distance = useTransform(mouseX, (val) => {\n    const bounds = ref.current?.getBoundingClientRect() ?? { x: 0, width: 0 };\n\n    return val - bounds.x - bounds.width / 2;\n  });\n\n  const widthTransform = useTransform(distance, [-150, 0, 150], [40, 60, 40]);\n  const heightTransform = useTransform(distance, [-150, 0, 150], [40, 60, 40]);\n\n  const widthTransformIcon = useTransform(\n    distance,\n    [-150, 0, 150],\n    [20, 40, 20],\n  );\n  const heightTransformIcon = useTransform(\n    distance,\n    [-150, 0, 150],\n    [20, 40, 20],\n  );\n\n  const width = useSpring(widthTransform, {\n    mass: 0.1,\n    stiffness: 150,\n    damping: 12,\n  });\n  const height = useSpring(heightTransform, {\n    mass: 0.1,\n    stiffness: 150,\n    damping: 12,\n  });\n\n  const widthIcon = useSpring(widthTransformIcon, {\n    mass: 0.1,\n    stiffness: 150,\n    damping: 12,\n  });\n  const heightIcon = useSpring(heightTransformIcon, {\n    mass: 0.1,\n    stiffness: 150,\n    damping: 12,\n  });\n\n  const rounded = useSpring(\n    useTransform(distance, [-150, 0, 150], [50, 10, 50]),\n    {\n      mass: 0.1,\n      stiffness: 150,\n      damping: 12,\n    },\n  );\n\n  const [hovered, setHovered] = useState(false);\n\n  return (\n    <a href={href}>\n      <motion.div\n        ref={ref}\n        style={{ width, height, borderRadius: rounded }}\n        onMouseEnter={() => setHovered(true)}\n        onMouseLeave={() => setHovered(false)}\n        className=\"bg-background/10 relative flex aspect-square items-center justify-center\"\n      >\n        <AnimatePresence>\n          {hovered && (\n            <motion.div\n              initial={{ opacity: 0, y: 10, x: \"-50%\" }}\n              animate={{ opacity: 1, y: 0, x: \"-50%\" }}\n              exit={{ opacity: 0, y: 2, x: \"-50%\" }}\n              className=\"bg-muted absolute -top-8 left-1/2 w-fit whitespace-pre rounded-full px-4 py-0.5 text-xs\"\n            >\n              {title}\n            </motion.div>\n          )}\n        </AnimatePresence>\n        <motion.div\n          style={{ width: widthIcon, height: heightIcon }}\n          className=\"text-muted-foreground flex items-center justify-center\"\n        >\n          {icon}\n        </motion.div>\n      </motion.div>\n    </a>\n  );\n}\n"
}