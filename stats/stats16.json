{
    "id": "stats16",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "stats16.jpg",
    "thumbnail": "stats16-4x3.webp",
    "description": "A component displaying statistics with a title, subtitle, a dynamic line chart, and three key metrics.",
    "createdAt": [
        3,
        "2025-08-28T06:53:00.507Z"
    ],
    "dependencies": [
        "react",
        "recharts"
    ],
    "registryDependencies": [
        {
            "name": "chart",
            "registryId": "shadcn",
            "registryItemUrl": "chart",
            "docsUrl": "https://ui.shadcn.com/docs/components/chart"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "stats"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Aug 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": true,
    "slug": "stats16",
    "collection": "block",
    "group": "stats",
    "code": "\"use client\";\n\nimport React from \"react\";\nimport { CartesianGrid, Line, LineChart, XAxis } from \"recharts\";\n\nimport {\n  ChartConfig,\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n} from \"@/components/ui/chart\";\n\ninterface StatItem {\n  title: string;\n  description: string;\n}\n\nconst statsData: StatItem[] = [\n  {\n    title: \"100%\",\n    description: \"Pre-Optimised for SEO\",\n  },\n  {\n    title: \"750+\",\n    description: \"Pre Built Blocks\",\n  },\n  {\n    title: \"85k+\",\n    description: \"Developers Trust\",\n  },\n];\n\nconst Stats16 = () => {\n  return (\n    <section className=\"overflow-hidden py-32\">\n      <div className=\"container flex w-full flex-col items-center justify-center px-4\">\n        <p className=\"bg-muted mb-4 rounded-full px-2 py-1 text-xs uppercase\">\n          STATS\n        </p>\n        <h2 className=\"relative py-2 text-center font-sans text-4xl font-semibold tracking-tighter lg:text-5xl\">\n          Stats That Show the Difference\n        </h2>\n        <p className=\"text-muted-foreground mx-auto max-w-xl px-5 text-center text-sm lg:text-base\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut\n        </p>\n\n        <div className=\"my-20 h-[30vh] w-full max-w-xl\">\n          <ChartLineDots />\n        </div>\n        <div className=\"flex w-full max-w-2xl items-center justify-between\">\n          {statsData.map((stat, index) => (\n            <div\n              key={index}\n              className=\"w-25 flex flex-col items-center justify-center gap-2 text-center\"\n            >\n              <h2 className=\"text-3xl font-semibold tracking-tighter md:text-5xl\">\n                {stat.title}\n              </h2>\n              <p className=\"text-muted-foreground text-sm\">\n                {stat.description}\n              </p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst chartData = [\n  { month: \"January\", desktop: 186, mobile: 80 },\n  { month: \"February\", desktop: 305, mobile: 200 },\n  { month: \"March\", desktop: 237, mobile: 120 },\n  { month: \"April\", desktop: 73, mobile: 190 },\n  { month: \"May\", desktop: 209, mobile: 130 },\n  { month: \"June\", desktop: 214, mobile: 140 },\n];\n\nconst chartConfig = {\n  desktop: {\n    label: \"Desktop\",\n    color: \"var(--chart-1)\",\n  },\n  mobile: {\n    label: \"Mobile\",\n    color: \"var(--chart-2)\",\n  },\n} satisfies ChartConfig;\n\nconst ChartLineDots = () => {\n  return (\n    <ChartContainer config={chartConfig} className=\"h-full w-full\">\n      <LineChart\n        accessibilityLayer\n        data={chartData}\n        margin={{\n          left: 12,\n          right: 12,\n        }}\n      >\n        <CartesianGrid vertical={false} />\n        <XAxis\n          dataKey=\"month\"\n          tickLine={false}\n          axisLine={false}\n          tickMargin={8}\n          tickFormatter={(value) => value.slice(0, 3)}\n        />\n        <ChartTooltip\n          cursor={false}\n          content={<ChartTooltipContent hideLabel />}\n        />\n        <Line\n          dataKey=\"desktop\"\n          type=\"natural\"\n          stroke=\"var(--color-desktop)\"\n          strokeWidth={2}\n          dot={{\n            fill: \"var(--color-desktop)\",\n          }}\n          activeDot={{\n            r: 6,\n          }}\n        />\n      </LineChart>\n    </ChartContainer>\n  );\n};\n\nexport { Stats16 };\n"
}