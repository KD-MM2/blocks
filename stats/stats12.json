{
    "id": "stats12",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "stats12.jpg",
    "thumbnail": "stats12-4x3.webp",
    "description": "This component displays dynamic stats with a toggle for monthly/yearly views, animated graph, and call-to-action button. It has a 2-column layout with animated numbers and icons.",
    "createdAt": [
        3,
        "2025-05-04T23:59:42.856Z"
    ],
    "dependencies": [
        "\"@number-flow/react\"",
        "framer-motion",
        "lucide-react",
        "react"
    ],
    "registryDependencies": [
        {
            "name": "button",
            "registryId": "shadcn",
            "registryItemUrl": "button",
            "docsUrl": "https://ui.shadcn.com/docs/components/button"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "stats"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Jun 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": true,
    "slug": "stats12",
    "collection": "block",
    "group": "stats",
    "code": "\"use client\";\n\nimport NumberFlow from \"@number-flow/react\";\nimport { motion, useInView } from \"framer-motion\";\nimport { ArrowRight, RefreshCcw } from \"lucide-react\";\nimport React, { useEffect, useMemo, useRef, useState } from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\n\nconst Stats12 = () => {\n  const [showMonthlyStats, setShowMonthlyStats] = useState(false);\n  const [stats, setStats] = useState({\n    monthly: {\n      TotalRevenue: 0,\n      TotalUsers: 0,\n      CompanyGrowth: 0,\n      NewCustomers: 0,\n      BigCorpClients: 0,\n    },\n    yearly: {\n      TotalRevenue: 0,\n      TotalUsers: 0,\n      CompanyGrowth: 0,\n      NewCustomers: 0,\n      BigCorpClients: 0,\n    },\n  });\n\n  const ref = useRef(null);\n  const isInView = useInView(ref);\n\n  const finalStats = useMemo(\n    () => ({\n      monthly: {\n        TotalRevenue: 12.3,\n        TotalUsers: 0.3,\n        CompanyGrowth: 300,\n        NewCustomers: 100,\n        BigCorpClients: 10,\n      },\n      yearly: {\n        TotalRevenue: 105,\n        TotalUsers: 50,\n        CompanyGrowth: 30,\n        NewCustomers: 1.5,\n        BigCorpClients: 75,\n      },\n    }),\n    [],\n  );\n\n  useEffect(() => {\n    if (isInView) {\n      setStats(finalStats);\n    }\n  }, [isInView, finalStats]);\n\n  return (\n    <section className=\"py-32\">\n      <div className=\"container flex justify-center\">\n        <div className=\"flex w-full flex-col justify-between gap-4 lg:flex-row\">\n          <div className=\"w-full lg:w-1/3\">\n            <h1 className=\"w-full font-calSans text-6xl font-medium\">\n              We don't just talk we Deliver Results\n            </h1>\n            <p className=\"my-4 text-lg tracking-tight text-muted-foreground\">\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Unde\n              perferendis deserunt quis excepturi reiciendis nulla?\n            </p>\n            <Button\n              variant=\"secondary\"\n              className=\"group text-md mt-10 flex w-fit items-center justify-center gap-2 rounded-full px-6 py-1 tracking-tight shadow-none\"\n            >\n              <span>Get Started With Us</span>\n              <ArrowRight className=\"size-4 -rotate-45 transition-all ease-out group-hover:ml-3 group-hover:rotate-0\" />\n            </Button>\n            <div className=\"mt-10 lg:w-[115%]\">\n              <Graph />\n            </div>\n          </div>\n          <div ref={ref} className=\"flex w-full flex-col items-end lg:w-1/2\">\n            <h1 className=\"font-calSans text-8xl leading-0 lg:text-[10rem]\">\n              <NumberFlow\n                value={\n                  showMonthlyStats\n                    ? stats.monthly.TotalRevenue\n                    : stats.yearly.TotalRevenue\n                }\n                prefix=\"$\"\n                suffix=\"M\"\n                className=\"font-calSans\"\n              />\n            </h1>\n            <div className=\"mb-6 flex flex-col items-center justify-center gap-6 lg:flex-row lg:gap-17\">\n              <p>And its just in a year</p>\n              <Button\n                variant=\"secondary\"\n                className=\"group text-md flex w-fit items-center justify-center gap-2 rounded-full px-6 py-1 tracking-tight shadow-none transition-all duration-300 ease-out active:scale-95\"\n                onClick={() => setShowMonthlyStats(!showMonthlyStats)}\n              >\n                <span>Show Monthly Stats</span>\n                <RefreshCcw className=\"size-4 -rotate-45 transition-all ease-out group-hover:ml-3 group-hover:rotate-0\" />\n              </Button>\n            </div>\n            <div className=\"mt-auto mb-10 grid w-full grid-cols-2 gap-14\">\n              <div className=\"text-left\">\n                <h2 className=\"text-4xl font-medium lg:text-6xl\">\n                  <NumberFlow\n                    value={\n                      showMonthlyStats\n                        ? stats.monthly.TotalUsers\n                        : stats.yearly.TotalUsers\n                    }\n                    suffix=\"k+\"\n                  />\n                </h2>\n                <p className=\"text-muted-foreground/70\"> Team Members </p>\n              </div>\n              <div className=\"text-right\">\n                <h2 className=\"text-4xl font-medium lg:text-6xl\">\n                  <NumberFlow\n                    value={\n                      showMonthlyStats\n                        ? stats.monthly.CompanyGrowth\n                        : stats.yearly.CompanyGrowth\n                    }\n                    suffix=\"%\"\n                  />\n                </h2>\n                <p className=\"text-muted-foreground/70\"> Company Growth </p>\n              </div>\n              <div className=\"text-left\">\n                <h2 className=\"text-4xl font-medium lg:text-6xl\">\n                  <NumberFlow\n                    value={\n                      showMonthlyStats\n                        ? stats.monthly.NewCustomers\n                        : stats.yearly.NewCustomers\n                    }\n                    suffix=\"M\"\n                  />\n                </h2>\n                <p className=\"text-muted-foreground/70\"> New Customers </p>\n              </div>\n              <div className=\"text-right\">\n                <h2 className=\"text-4xl font-medium lg:text-6xl\">\n                  <NumberFlow\n                    value={\n                      showMonthlyStats\n                        ? stats.monthly.BigCorpClients\n                        : stats.yearly.BigCorpClients\n                    }\n                    prefix=\"~\"\n                    suffix=\"+\"\n                  />\n                </h2>\n                <p className=\"text-muted-foreground/70\"> Revenue </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport { Stats12 };\n\nfunction Graph() {\n  return (\n    <div className=\"wrapper\">\n      <motion.svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        fill=\"none\"\n        viewBox=\"0 0 644 388\"\n        initial={{\n          clipPath: \"inset(0px 100% 0px 0px)\",\n        }}\n        animate={{\n          clipPath: \"inset(0px 0% 0px 0px)\",\n        }}\n        transition={{\n          duration: 1,\n          type: \"spring\",\n          damping: 18,\n        }}\n      >\n        <g clipPath=\"url(#grad)\">\n          <path\n            d=\"M1 118.5C1 118.5 83.308 102.999 114.735 89.4998C146.162 76.0008 189.504 87.7868 235.952 77.4998C273.548 69.1718 294.469 62.4938 329.733 46.9998C409.879 11.7848 452.946 30.9998 483.874 22.4998C514.802 13.9998 635.97 0.84884 644 1.49984\"\n            stroke=\"#0090FF\"\n            strokeWidth=\"2\"\n          />\n          <path\n            d=\"M113.912 89.4888C82.437 102.988 1 118.487 1 118.487V438.477H644V1.49977C635.957 0.849773 514.601 13.9988 483.625 22.4978C452.649 30.9958 409.515 11.7838 329.245 46.9938C293.926 62.4868 272.973 69.1638 235.318 77.4908C188.798 87.7768 145.388 75.9908 113.912 89.4888Z\"\n            fill=\"url(#grad)\"\n          />\n        </g>\n        <defs>\n          <linearGradient\n            id=\"grad\"\n            x1=\"321.5\"\n            y1=\"0.476773\"\n            x2=\"321.5\"\n            y2=\"387.477\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <stop stopColor=\"#138EED\" stopOpacity=\"0.4\" />\n            <stop offset=\"1\" stopColor=\"#058FFB\" stopOpacity=\"0\" />\n          </linearGradient>\n        </defs>\n      </motion.svg>\n    </div>\n  );\n}\n"
}