{
    "id": "stats14",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "stats14.jpg",
    "thumbnail": "stats14-4x3.webp",
    "description": "A countdown display component with an animated timer, promotional text, and a call-to-action button. Features a decorated container with dotted accents.",
    "createdAt": [
        3,
        "2025-05-04T23:59:43.857Z"
    ],
    "dependencies": [
        "\"@number-flow/react\"",
        "framer-motion",
        "lucide-react",
        "react"
    ],
    "registryDependencies": [
        {
            "name": "button",
            "registryId": "shadcn",
            "registryItemUrl": "button",
            "docsUrl": "https://ui.shadcn.com/docs/components/button"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "stats"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Jun 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": true,
    "slug": "stats14",
    "collection": "block",
    "group": "stats",
    "code": "\"use client\";\n\nimport NumberFlow from \"@number-flow/react\";\nimport { motion } from \"framer-motion\";\nimport { ArrowRight } from \"lucide-react\";\nimport React, { useEffect, useState } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport { Button } from \"@/components/ui/button\";\nconst MotionNumberFlow = motion.create(NumberFlow);\n\nconst Stats14 = () => {\n  return (\n    <section className=\"py-32\">\n      <div className=\"container flex items-center justify-center\">\n        <DottedDiv className=\"h-114 w-full\">\n          <div className=\"flex h-full w-full flex-col items-center justify-center bg-muted/30\">\n            <p className=\"tracking-tight opacity-50 md:text-lg\">\n              50 new blocks every month\n            </p>\n            <AnimatedNumberCountdown\n              endDate={new Date(\"2025-12-31\")}\n              className=\"my-4\"\n            />\n            <Button\n              variant=\"secondary\"\n              className=\"group text-md mt-7 flex w-fit items-center justify-center gap-2 rounded-full px-4 py-1 tracking-tight shadow-none\"\n            >\n              <span>Join The Waitlist</span>\n              <ArrowRight className=\"size-4 -rotate-45 transition-all ease-out group-hover:ml-3 group-hover:rotate-0\" />\n            </Button>\n          </div>\n        </DottedDiv>\n      </div>\n    </section>\n  );\n};\n\nexport { Stats14 };\n\nconst DottedDiv = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => (\n  <div\n    className={cn(\"relative h-full w-full overflow-hidden sm:p-4\", className)}\n  >\n    <div className=\"absolute top-4 left-0 hidden h-[1.5px] w-[100%] bg-muted sm:block\" />\n    <div className=\"absolute bottom-4 left-0 hidden h-[1.5px] w-[100%] bg-muted sm:block\" />\n    <div className=\"absolute -top-25 left-4 hidden h-[130%] w-[1.5px] bg-muted sm:block\" />\n    <div className=\"absolute -top-25 right-4 hidden h-[130%] w-[1.5px] bg-muted sm:block\" />\n    <div className=\"absolute top-[12.5px] left-[12.5px] z-10 hidden size-2 rounded-full bg-foreground sm:block\" />\n    <div className=\"absolute top-[12.5px] right-[12.5px] z-10 hidden size-2 rounded-full bg-foreground sm:block\" />\n    <div className=\"absolute bottom-[12.5px] left-[12.5px] z-10 hidden size-2 rounded-full bg-foreground sm:block\" />\n    <div className=\"absolute right-[12.5px] bottom-[12.5px] z-10 hidden size-2 rounded-full bg-foreground sm:block\" />\n    {children}\n  </div>\n);\n\ninterface CountdownProps {\n  endDate: Date;\n  startDate?: Date;\n  className?: string;\n}\n\ninterface TimeLeft {\n  days: number;\n  hours: number;\n  minutes: number;\n  seconds: number;\n}\n\nfunction AnimatedNumberCountdown({\n  endDate,\n  startDate,\n  className,\n}: CountdownProps) {\n  const [timeLeft, setTimeLeft] = useState<TimeLeft>({\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  });\n\n  useEffect(() => {\n    const calculateTimeLeft = () => {\n      const start = startDate ? new Date(startDate) : new Date();\n      const end = new Date(endDate);\n      const difference = end.getTime() - start.getTime();\n\n      if (difference > 0) {\n        const days = Math.floor(difference / (1000 * 60 * 60 * 24));\n        const hours = Math.floor((difference / (1000 * 60 * 60)) % 24);\n        const minutes = Math.floor((difference / 1000 / 60) % 60);\n        const seconds = Math.floor((difference / 1000) % 60);\n\n        setTimeLeft({ days, hours, minutes, seconds });\n      } else {\n        setTimeLeft({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      }\n    };\n\n    calculateTimeLeft();\n    const timer = setInterval(calculateTimeLeft, 1000);\n\n    return () => clearInterval(timer);\n  }, [endDate, startDate]);\n\n  return (\n    <div className={`flex items-center justify-center gap-4 ${className}`}>\n      <div className=\"flex flex-col items-center\">\n        <MotionNumberFlow\n          value={timeLeft.days}\n          className=\"text-3xl font-semibold tracking-tight sm:text-5xl\"\n          format={{ minimumIntegerDigits: 2 }}\n        />\n        <span className=\"text-sm text-gray-500\">Days</span>\n      </div>\n      <div className=\"text-2xl font-bold\">:</div>\n      <div className=\"flex flex-col items-center\">\n        <MotionNumberFlow\n          value={timeLeft.hours}\n          className=\"text-3xl font-semibold tracking-tight sm:text-5xl\"\n          format={{ minimumIntegerDigits: 2 }}\n        />\n        <span className=\"text-sm text-gray-500\">Hours</span>\n      </div>\n      <div className=\"text-2xl font-bold\">:</div>\n      <div className=\"flex flex-col items-center\">\n        <MotionNumberFlow\n          value={timeLeft.minutes}\n          className=\"text-3xl font-semibold tracking-tight sm:text-5xl\"\n          format={{ minimumIntegerDigits: 2 }}\n        />\n        <span className=\"text-sm text-gray-500\">Minutes</span>\n      </div>\n      <div className=\"text-2xl font-bold\">:</div>\n      <div className=\"flex flex-col items-center\">\n        <MotionNumberFlow\n          value={timeLeft.seconds}\n          className=\"text-3xl font-semibold tracking-tight sm:text-5xl\"\n          format={{ minimumIntegerDigits: 2 }}\n        />\n        <span className=\"text-sm text-gray-500\">Seconds</span>\n      </div>\n    </div>\n  );\n}\n"
}