{
    "id": "integration11",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "integration11.jpg",
    "thumbnail": "integration11-4x3.webp",
    "description": "A tabbed component showcasing categorized integrations with toggles for connection status and details button. Layout scales from 1 to 3 columns.",
    "createdAt": [
        3,
        "2025-04-29T08:27:56.325Z"
    ],
    "dependencies": [
        "react"
    ],
    "registryDependencies": [
        {
            "name": "button",
            "registryId": "shadcn",
            "registryItemUrl": "button",
            "docsUrl": "https://ui.shadcn.com/docs/components/button"
        },
        {
            "name": "switch",
            "registryId": "shadcn",
            "registryItemUrl": "switch",
            "docsUrl": "https://ui.shadcn.com/docs/components/switch"
        },
        {
            "name": "tabs",
            "registryId": "shadcn",
            "registryItemUrl": "tabs",
            "docsUrl": "https://ui.shadcn.com/docs/components/tabs"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "integration"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "May 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": false,
    "slug": "integration11",
    "collection": "block",
    "group": "integration",
    "code": "\"use client\";\n\nimport React, { useState } from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\ninterface Integration {\n  id: number;\n  icon: string;\n  title: string;\n  description: string;\n  category: string;\n  categoryDescription: string;\n  connected: boolean;\n}\n\nconst INTEGRATIONS: Integration[] = [\n  {\n    id: 1,\n    icon: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/google-icon.svg\",\n    title: \"Google\",\n    description:\n      \"Offers tools for lead generation, email marketing, and customer service.\",\n    category: \"Sales & Marketing Tools\",\n    categoryDescription:\n      \"Enhancing the efficiency and effectiveness of your sales and marketing activities\",\n    connected: true,\n  },\n  {\n    id: 2,\n    icon: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/github-icon.svg\",\n    title: \"Github\",\n    description:\n      \"Provides comprehensive sales and customer relationship management.\",\n    category: \"Sales & Marketing Tools\",\n    categoryDescription:\n      \"Enhancing the efficiency and effectiveness of your sales and marketing activities\",\n    connected: false,\n  },\n  {\n    id: 3,\n    icon: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/spotify-icon.svg\",\n    title: \"Spotify\",\n    description:\n      \"Focuses on sales pipeline management with a visual pipeline management tool.\",\n    category: \"Sales & Marketing Tools\",\n    categoryDescription:\n      \"Enhancing the efficiency and effectiveness of your sales and marketing activities\",\n    connected: false,\n  },\n  {\n    id: 4,\n    icon: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/slack-icon.svg\",\n    title: \"Slack\",\n    description:\n      \"Enables real-time collaboration and updates on CRM activities.\",\n    category: \"Communication & Collaboration\",\n    categoryDescription:\n      \"Enhancing the efficiency and effectiveness of team interactions and workflows\",\n    connected: true,\n  },\n  {\n    id: 5,\n    icon: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/google-icon.svg\",\n    title: \"Google\",\n    description: \"Enhances communication and scheduling within the CRM.\",\n    category: \"Communication & Collaboration\",\n    categoryDescription:\n      \"Enhancing the efficiency and effectiveness of team interactions and workflows\",\n    connected: true,\n  },\n  {\n    id: 6,\n    icon: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/github-icon.svg\",\n    title: \"Github\",\n    description: \"Supports seamless integrated CRM inside Microsoft Teams.\",\n    category: \"Communication & Collaboration\",\n    categoryDescription:\n      \"Enhancing the efficiency and effectiveness of team interactions and workflows\",\n    connected: false,\n  },\n  {\n    id: 7,\n    icon: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/spotify-icon.svg\",\n    title: \"Spotify\",\n    description:\n      \"Provides a unified view of customer interactions and schedules.\",\n    category: \"Communication & Collaboration\",\n    categoryDescription:\n      \"Enhancing the efficiency and effectiveness of team interactions and workflows\",\n    connected: false,\n  },\n  {\n    id: 8,\n    icon: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/github-icon.svg\",\n    title: \"Github\",\n    description:\n      \"Tracks and manages customer support activities and performance.\",\n    category: \"Communication & Collaboration\",\n    categoryDescription:\n      \"Enhancing the efficiency and effectiveness of team interactions and workflows\",\n    connected: false,\n  },\n  {\n    id: 9,\n    icon: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/logos/figma-icon.svg\",\n    title: \"Figma\",\n    description: \"Streamlines customer support and ticketing within the CRM.\",\n    category: \"Communication & Collaboration\",\n    categoryDescription:\n      \"Enhancing the efficiency and effectiveness of team interactions and workflows\",\n    connected: false,\n  },\n];\n\nconst TABS = [\n  { label: \"All Applications\", value: \"all\" },\n  { label: \"Connected\", value: \"connected\" },\n  { label: \"Disconnected\", value: \"disconnected\" },\n];\n\ntype CategoryGroup = {\n  category: string;\n  categoryDescription: string;\n  integrations: Integration[];\n};\n\nfunction groupByCategory(data: Integration[]): CategoryGroup[] {\n  const map = new Map<string, CategoryGroup>();\n  data.forEach((item) => {\n    if (!map.has(item.category)) {\n      map.set(item.category, {\n        category: item.category,\n        categoryDescription: item.categoryDescription,\n        integrations: [],\n      });\n    }\n    map.get(item.category)!.integrations.push(item);\n  });\n  return Array.from(map.values());\n}\n\nconst Integration11 = () => {\n  const [tab, setTab] = useState<string>(\"all\");\n  const [toggles, setToggles] = useState<Record<number, boolean>>(() => {\n    const state: Record<number, boolean> = {};\n    INTEGRATIONS.forEach((i) => {\n      state[i.id] = i.connected;\n    });\n    return state;\n  });\n\n  let filtered: Integration[] = INTEGRATIONS;\n  if (tab === \"connected\") filtered = INTEGRATIONS.filter((i) => toggles[i.id]);\n  if (tab === \"disconnected\")\n    filtered = INTEGRATIONS.filter((i) => !toggles[i.id]);\n  const grouped = groupByCategory(filtered);\n\n  return (\n    <section className=\"py-32\">\n      <div className=\"container\">\n        <h1 className=\"mb-6 text-2xl font-bold\">Integrations</h1>\n        <Tabs value={tab} onValueChange={setTab}>\n          <TabsList className=\"mb-8\">\n            {TABS.map((t) => (\n              <TabsTrigger\n                key={t.value}\n                value={t.value}\n                className=\"px-4 py-2 text-sm font-medium\"\n              >\n                {t.label}\n              </TabsTrigger>\n            ))}\n          </TabsList>\n          {TABS.map((t) => (\n            <TabsContent key={t.value} value={t.value}>\n              {grouped.map((group) => (\n                <div key={group.category} className=\"mb-10\">\n                  <h2 className=\"mb-1 text-lg font-semibold\">\n                    {group.category}\n                  </h2>\n                  <p className=\"mb-4 text-sm text-muted-foreground\">\n                    {group.categoryDescription}\n                  </p>\n                  <div className=\"grid grid-cols-1 gap-6 sm:grid-cols-2 lg:grid-cols-3\">\n                    {group.integrations.map((integration) => (\n                      <div\n                        key={integration.id}\n                        className=\"flex min-h-[170px] flex-col justify-between rounded-xl border bg-background p-6 shadow-sm transition hover:shadow-md\"\n                      >\n                        <div className=\"mb-4 flex items-center gap-4\">\n                          <div className=\"flex h-12 w-12 flex-shrink-0 flex-grow-0 items-center justify-center rounded-md bg-muted p-2\">\n                            <img\n                              src={integration.icon}\n                              alt={integration.title}\n                              width={32}\n                              height={32}\n                              className=\"h-8 w-8 flex-shrink-0 flex-grow-0 object-contain\"\n                            />\n                          </div>\n                          <div>\n                            <div className=\"text-base leading-tight font-medium\">\n                              {integration.title}\n                            </div>\n                            <div className=\"text-xs leading-snug text-muted-foreground\">\n                              {integration.description}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"mt-auto flex items-center justify-between gap-2\">\n                          <div className=\"flex gap-2\">\n                            <Button size=\"sm\" variant=\"outline\">\n                              Details\n                            </Button>\n                          </div>\n                          <Switch\n                            checked={toggles[integration.id]}\n                            onCheckedChange={(checked: boolean) =>\n                              setToggles((prev) => ({\n                                ...prev,\n                                [integration.id]: checked,\n                              }))\n                            }\n                          />\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </TabsContent>\n          ))}\n        </Tabs>\n      </div>\n    </section>\n  );\n};\n\nexport { Integration11 };\n"
}