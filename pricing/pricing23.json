{
    "id": "pricing23",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "pricing23.jpg",
    "thumbnail": "pricing23-4x3.webp",
    "description": "A component displaying pricing plans and feature comparison, collapsible on mobile for plan selection, grid layout for desktop showing all plans side-by-side.",
    "createdAt": "2025-01-23T06:56:18.633Z",
    "dependencies": [
        "lucide-react",
        "react"
    ],
    "registryDependencies": [
        {
            "name": "button",
            "registryId": "shadcn",
            "registryItemUrl": "button",
            "docsUrl": "https://ui.shadcn.com/docs/components/button"
        },
        {
            "name": "collapsible",
            "registryId": "shadcn",
            "registryItemUrl": "collapsible",
            "docsUrl": "https://ui.shadcn.com/docs/components/collapsible"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "pricing"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Feb 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": false,
    "slug": "pricing23",
    "collection": "block",
    "group": "pricing",
    "code": "\"use client\";\n\nimport { Check, ChevronsUpDown } from \"lucide-react\";\nimport { useState } from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\";\n\ninterface FeatureSection {\n  category: string;\n  features: {\n    name: string;\n    free: string | boolean;\n    startup: string | boolean;\n    enterprise: string | boolean;\n  }[];\n}\n\nconst pricingPlans = [\n  {\n    name: \"Free\",\n    button: {\n      text: \"Get started\",\n      variant: \"outline\" as const,\n    },\n  },\n  {\n    name: \"Startup\",\n    button: {\n      text: \"Get started\",\n      variant: \"outline\" as const,\n    },\n  },\n  {\n    name: \"Enterprise\",\n    button: {\n      text: \"Get a demo\",\n      variant: \"outline\" as const,\n    },\n  },\n];\n\nconst comparisonFeatures: FeatureSection[] = [\n  {\n    category: \"Usage\",\n    features: [\n      {\n        name: \"Members\",\n        free: \"Unlimited\",\n        startup: \"Unlimited\",\n        enterprise: \"Unlimited\",\n      },\n      {\n        name: \"Transactions\",\n        free: \"250\",\n        startup: \"Unlimited\",\n        enterprise: \"Unlimited\",\n      },\n      {\n        name: \"Teams\",\n        free: \"2\",\n        startup: \"Unlimited\",\n        enterprise: \"Unlimited\",\n      },\n    ],\n  },\n  {\n    category: \"Features\",\n    features: [\n      {\n        name: \"Reporting\",\n        free: true,\n        startup: true,\n        enterprise: true,\n      },\n      {\n        name: \"Analytics\",\n        free: true,\n        startup: true,\n        enterprise: true,\n      },\n      {\n        name: \"Import and export\",\n        free: true,\n        startup: true,\n        enterprise: true,\n      },\n      {\n        name: \"Integrations\",\n        free: true,\n        startup: true,\n        enterprise: true,\n      },\n      {\n        name: \"Mainline AI\",\n        free: false,\n        startup: true,\n        enterprise: true,\n      },\n      {\n        name: \"Admin roles\",\n        free: false,\n        startup: false,\n        enterprise: false,\n      },\n      {\n        name: \"Audit log\",\n        free: false,\n        startup: false,\n        enterprise: false,\n      },\n    ],\n  },\n  {\n    category: \"Support\",\n    features: [\n      {\n        name: \"Priority Support\",\n        free: true,\n        startup: true,\n        enterprise: true,\n      },\n      {\n        name: \"Account Manager\",\n        free: false,\n        startup: false,\n        enterprise: true,\n      },\n      {\n        name: \"Uptime SLA\",\n        free: false,\n        startup: false,\n        enterprise: true,\n      },\n    ],\n  },\n];\n\nconst Pricing23 = () => {\n  const [selectedPlan, setSelectedPlan] = useState(1); // Default to Startup plan\n\n  return (\n    <section className=\"py-32\">\n      <div className=\"container\">\n        <PlanHeaders\n          selectedPlan={selectedPlan}\n          onPlanChange={setSelectedPlan}\n        />\n        <FeatureSections selectedPlan={selectedPlan} />\n      </div>\n    </section>\n  );\n};\n\nconst PlanHeaders = ({\n  selectedPlan,\n  onPlanChange,\n}: {\n  selectedPlan: number;\n  onPlanChange: (index: number) => void;\n}) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <div className=\"\">\n      {/* Mobile View */}\n      <div className=\"md:hidden\">\n        <Collapsible open={isOpen} onOpenChange={setIsOpen} className=\"\">\n          <div className=\"flex items-center justify-between border-b py-4\">\n            <CollapsibleTrigger className=\"flex items-center gap-2\">\n              <h3 className=\"text-2xl font-semibold\">\n                {pricingPlans[selectedPlan].name}\n              </h3>\n              <ChevronsUpDown\n                className={`size-5 transition-transform ${isOpen ? \"rotate-180\" : \"\"}`}\n              />\n            </CollapsibleTrigger>\n            <Button\n              variant={pricingPlans[selectedPlan].button.variant}\n              className=\"w-fit\"\n            >\n              {pricingPlans[selectedPlan].button.text}\n            </Button>\n          </div>\n          <CollapsibleContent className=\"flex flex-col space-y-2 p-2\">\n            {pricingPlans.map(\n              (plan, index) =>\n                index !== selectedPlan && (\n                  <Button\n                    size=\"lg\"\n                    variant=\"secondary\"\n                    key={index}\n                    onClick={() => {\n                      onPlanChange(index);\n                      setIsOpen(false);\n                    }}\n                  >\n                    {plan.name}\n                  </Button>\n                ),\n            )}\n          </CollapsibleContent>\n        </Collapsible>\n      </div>\n\n      {/* Desktop View */}\n      <div className=\"grid grid-cols-4 gap-4 max-md:hidden\">\n        <div className=\"col-span-1 max-md:hidden\"></div>\n\n        {pricingPlans.map((plan, index) => (\n          <div key={index} className=\"\">\n            <h3 className=\"mb-3 text-2xl font-semibold\">{plan.name}</h3>\n            <Button variant={plan.button.variant} className=\"\">\n              {plan.button.text}\n            </Button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst FeatureSections = ({ selectedPlan }: { selectedPlan: number }) => (\n  <>\n    {comparisonFeatures.map((section, sectionIndex) => (\n      <div key={sectionIndex} className=\"\">\n        <div className=\"border-b border-primary/40 py-4\">\n          <h3 className=\"text-lg font-semibold\">{section.category}</h3>\n        </div>\n        {section.features.map((feature, featureIndex) => (\n          <div\n            key={featureIndex}\n            className=\"grid grid-cols-2 font-medium text-primary max-md:border-b md:grid-cols-4\"\n          >\n            <span className=\"inline-flex items-center py-4\">\n              {feature.name}\n            </span>\n            {/* Mobile View - Only Selected Plan */}\n            <div className=\"md:hidden\">\n              <div className=\"flex items-center gap-1 py-4 md:border-b\">\n                {(() => {\n                  const value = [\n                    feature.free,\n                    feature.startup,\n                    feature.enterprise,\n                  ][selectedPlan];\n                  return typeof value === \"boolean\" ? (\n                    value ? (\n                      <Check className=\"size-5\" />\n                    ) : null\n                  ) : (\n                    <div className=\"flex items-center gap-1\">\n                      <Check className=\"size-4\" />\n                      <span>{value}</span>\n                    </div>\n                  );\n                })()}\n              </div>\n            </div>\n            {/* Desktop View - All Plans */}\n            <div className=\"hidden md:col-span-3 md:grid md:grid-cols-3 md:gap-4\">\n              {[feature.free, feature.startup, feature.enterprise].map(\n                (value, i) => (\n                  <div\n                    key={i}\n                    className=\"flex items-center gap-1 border-b py-4\"\n                  >\n                    {typeof value === \"boolean\" ? (\n                      value ? (\n                        <Check className=\"size-5\" />\n                      ) : null\n                    ) : (\n                      <div className=\"flex items-center gap-1\">\n                        <Check className=\"size-4\" />\n                        <span>{value}</span>\n                      </div>\n                    )}\n                  </div>\n                ),\n              )}\n            </div>\n          </div>\n        ))}\n      </div>\n    ))}\n  </>\n);\n\nexport { Pricing23 };\n"
}