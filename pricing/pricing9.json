{
    "id": "pricing9",
    "access": "pro",
    "weight": 100,
    "disabled": false,
    "draft": false,
    "screenshot": "pricing9.jpg",
    "thumbnail": "pricing9-4x3.webp",
    "description": "A pricing table component with a plan switcher, tooltips, and feature icons, displaying 3 tiers and key features in a 4-column layout.",
    "createdAt": [
        3,
        "2024-08-05T05:21:46.640Z"
    ],
    "dependencies": [
        "lucide-react",
        "react"
    ],
    "registryDependencies": [
        {
            "name": "button",
            "registryId": "shadcn",
            "registryItemUrl": "button",
            "docsUrl": "https://ui.shadcn.com/docs/components/button"
        },
        {
            "name": "card",
            "registryId": "shadcn",
            "registryItemUrl": "card",
            "docsUrl": "https://ui.shadcn.com/docs/components/card"
        },
        {
            "name": "switch",
            "registryId": "shadcn",
            "registryItemUrl": "switch",
            "docsUrl": "https://ui.shadcn.com/docs/components/switch"
        },
        {
            "name": "tooltip",
            "registryId": "shadcn",
            "registryItemUrl": "tooltip",
            "docsUrl": "https://ui.shadcn.com/docs/components/tooltip"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "pricing"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Aug 2024"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": true,
    "slug": "pricing9",
    "collection": "block",
    "group": "pricing",
    "code": "\"use client\";\n\nimport { CheckIcon, Info, MinusIcon } from \"lucide-react\";\nimport { Fragment, useState } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Switch } from \"@/components/ui/switch\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\n\ntype TierName = \"Free\" | \"Pro\" | \"Premium\";\n\ninterface Tier {\n  name: string;\n  price: string;\n  annualPrice: string;\n  description: string;\n}\n\ninterface Feature {\n  name: string;\n  tiers: Partial<Record<TierName, boolean>>;\n  tooltip?: string;\n}\n\ninterface Section {\n  name: string;\n  features: Feature[];\n}\n\nconst tiers: Tier[] = [\n  {\n    name: \"Free\",\n    price: \"$0\",\n    annualPrice: \"$0\",\n    description: \"Quis suspendisse ut fermentum neque vivamus.\",\n  },\n  {\n    name: \"Pro\",\n    price: \"$10\",\n    annualPrice: \"$100\",\n    description: \"Quis eleifend a tincidunt pellentesque.\",\n  },\n  {\n    name: \"Premium\",\n    price: \"$15\",\n    annualPrice: \"$150\",\n    description: \"Orci volutpat ut sed sed neque, dui eget.\",\n  },\n];\nconst sections: Section[] = [\n  {\n    name: \"Key Features\",\n    features: [\n      {\n        name: \"Live Collaboration\",\n        tiers: { Free: true, Pro: true, Premium: true },\n        tooltip: \"Lorem ipsum dolor sit amet, consectetur\",\n      },\n      {\n        name: \"Unlimited projects\",\n        tiers: { Free: true, Pro: true, Premium: true },\n        tooltip: \"Lorem ipsum dolor sit amet, consectetur\",\n      },\n      {\n        name: \"Custom permissions\",\n        tiers: { Pro: true, Premium: true },\n        tooltip: \"Lorem ipsum dolor sit amet, consectetur\",\n      },\n      {\n        name: \"Team members\",\n        tiers: {\n          Premium: true,\n        },\n        tooltip: \"Lorem ipsum dolor sit amet, consectetur\",\n      },\n    ],\n  },\n  {\n    name: \"Reporting\",\n    features: [\n      {\n        name: \"Basic reports\",\n        tiers: { Free: true, Pro: true, Premium: true },\n        tooltip: \"Lorem ipsum dolor sit amet, consectetur\",\n      },\n      {\n        name: \"Advanced reports\",\n        tiers: { Pro: true, Premium: true },\n        tooltip: \"Lorem ipsum dolor sit amet, consectetur\",\n      },\n      {\n        name: \"Custom reports\",\n        tiers: { Premium: true },\n        tooltip: \"Lorem ipsum dolor sit amet, consectetur\",\n      },\n      {\n        name: \"Export data\",\n        tiers: { Premium: true },\n        tooltip: \"Lorem ipsum dolor sit amet, consectetur\",\n      },\n    ],\n  },\n];\n\nconst Pricing9 = () => {\n  const [isAnnual, setIsAnnual] = useState(false);\n  return (\n    <section className=\"py-24 sm:py-32\">\n      <div className=\"mx-auto max-w-7xl px-6 lg:px-8\">\n        <div className=\"mx-auto max-w-4xl text-center\">\n          <p className=\"mt-2 text-4xl font-bold tracking-tight sm:text-5xl\">\n            Choose Your Plan\n          </p>\n        </div>\n        <p className=\"mx-auto mt-6 max-w-2xl text-center text-lg leading-8 text-muted-foreground\">\n          Distinctio et nulla eum soluta et neque labore quibusdam. Saepe et\n          quasi.\n        </p>\n        <div className=\"mt-10 flex flex-col items-center gap-2 lg:hidden\">\n          <span className=\"flex items-center gap-3 text-base font-medium\">\n            Annual\n            <Switch\n              checked={isAnnual}\n              onCheckedChange={() => setIsAnnual(!isAnnual)}\n            />\n            Monthly\n          </span>\n        </div>\n\n        <div className=\"mx-auto mt-12 max-w-md space-y-8 sm:mt-16 lg:hidden\">\n          {tiers.map((tier) => (\n            <Card key={tier.name} className=\"p-8\">\n              <CardHeader className=\"p-0\">\n                <div className=\"flex flex-col gap-2 text-center\">\n                  <span className=\"text-xl leading-7 font-bold uppercase\">\n                    <CardTitle className=\"text-xl\">{tier.name}</CardTitle>\n                  </span>\n                  <span className=\"text-sm font-normal text-muted-foreground\">\n                    {tier.description}\n                  </span>\n                </div>\n                <div className=\"flex flex-col justify-center gap-x-1 pt-8 text-center\">\n                  <span className=\"text-4xl font-bold\">\n                    {isAnnual ? tier.annualPrice : tier.price}\n                  </span>\n                  <span className=\"text-sm leading-6 text-muted-foreground\">\n                    /month\n                  </span>\n                </div>\n              </CardHeader>\n              <Button className=\"mt-8 w-full\">Buy plan</Button>\n              <CardContent className=\"p-0\">\n                <ul className=\"mt-10 space-y-4 text-sm leading-6\">\n                  <TooltipProvider>\n                    {sections.map((section) => (\n                      <li key={section.name}>\n                        <ul role=\"list\" className=\"space-y-4\">\n                          {section.features.map(\n                            (feature) =>\n                              feature.tiers[tier.name as TierName] && (\n                                <li\n                                  key={feature.name}\n                                  className=\"flex items-center justify-between\"\n                                >\n                                  <span className=\"flex items-center gap-3\">\n                                    <CheckIcon className=\"h-5 w-5 flex-none\" />\n                                    <span>{feature.name}</span>\n                                  </span>\n                                  <Tooltip>\n                                    <TooltipTrigger>\n                                      <Info className=\"ml-1 h-4 w-4 text-muted-foreground\" />\n                                    </TooltipTrigger>\n                                    <TooltipContent>\n                                      {feature.tooltip}\n                                    </TooltipContent>\n                                  </Tooltip>\n                                </li>\n                              ),\n                          )}\n                        </ul>\n                      </li>\n                    ))}\n                  </TooltipProvider>\n                </ul>\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        <div className=\"isolate mt-20 hidden lg:block\">\n          <div className=\"relative -mx-8\">\n            {tiers.map((tier, idx) => (\n              <div\n                className=\"absolute inset-x-4 inset-y-0 -z-10 flex\"\n                key={tier.name}\n              >\n                <div\n                  className=\"flex w-1/4 px-4\"\n                  style={{\n                    marginLeft: `${(idx + 1) * 25}%`,\n                  }}\n                >\n                  <div className=\"w-full border-x\" />\n                </div>\n              </div>\n            ))}\n            <table className=\"w-full table-fixed border-separate border-spacing-x-8 text-left\">\n              <thead>\n                <tr>\n                  <td />\n                  {tiers.map((tier) => (\n                    <th key={tier.name} className=\"px-6 pt-6 xl:px-8 xl:pt-8\">\n                      <div className=\"flex flex-col gap-2 text-center\">\n                        <span className=\"text-xl leading-7 font-bold uppercase\">\n                          {tier.name}\n                        </span>\n                        <span className=\"text-sm font-normal text-muted-foreground\">\n                          {tier.description}\n                        </span>\n                      </div>\n                    </th>\n                  ))}\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <th>\n                    <div className=\"flex flex-col gap-2\">\n                      <p className=\"text-sm font-normal text-muted-foreground\">\n                        Billings\n                      </p>\n                      <span className=\"flex items-center gap-3 text-base font-medium\">\n                        Annual\n                        <Switch\n                          checked={isAnnual}\n                          onCheckedChange={() => setIsAnnual(!isAnnual)}\n                        />\n                        Monthly\n                      </span>\n                    </div>\n                  </th>\n                  {tiers.map((tier) => (\n                    <td key={tier.name} className=\"px-6 pt-10 xl:px-8\">\n                      <div className=\"flex flex-col justify-center gap-x-1 text-center\">\n                        <span className=\"text-4xl font-bold\">\n                          {isAnnual ? tier.annualPrice : tier.price}\n                        </span>\n                        <span className=\"text-sm leading-6 text-muted-foreground\">\n                          /month\n                        </span>\n                      </div>\n                      <Button className=\"mt-8 w-full\">Get Started</Button>\n                    </td>\n                  ))}\n                </tr>\n                {sections.map((section, sectionIdx) => (\n                  <Fragment key={section.name}>\n                    <tr>\n                      <th\n                        className={cn(\n                          \"pb-4 text-sm leading-6 font-semibold\",\n                          sectionIdx === 0 ? \"pt-8\" : \"pt-16\",\n                        )}\n                      >\n                        {section.name}\n                      </th>\n                    </tr>\n                    <TooltipProvider delayDuration={200}>\n                      {section.features.map((feature) => (\n                        <tr key={feature.name}>\n                          <th className=\"flex items-center justify-between py-4 text-sm leading-6 font-normal\">\n                            {feature.name}\n                            <Tooltip>\n                              <TooltipTrigger>\n                                <Info className=\"ml-1 h-4 w-4 text-muted-foreground hover:text-foreground\" />\n                              </TooltipTrigger>\n                              <TooltipContent>{feature.tooltip}</TooltipContent>\n                            </Tooltip>\n                          </th>\n                          {tiers.map((tier) => (\n                            <td key={tier.name} className=\"px-6 py-4 xl:px-8\">\n                              <>\n                                {feature.tiers[tier.name as TierName] ? (\n                                  <CheckIcon className=\"mx-auto h-5 w-5\" />\n                                ) : (\n                                  <MinusIcon className=\"mx-auto h-5 w-5 text-muted-foreground\" />\n                                )}\n                              </>\n                            </td>\n                          ))}\n                        </tr>\n                      ))}\n                    </TooltipProvider>\n                  </Fragment>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\nexport { Pricing9 };\n"
}