{
    "id": "careers8",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "careers8.jpg",
    "thumbnail": "careers8-4x3.webp",
    "description": "A dynamic job listing component with a filter for departments, displaying job categories and openings in grids up to 3 columns wide.",
    "createdAt": "2025-03-30T02:38:45.768Z",
    "dependencies": [
        "react"
    ],
    "registryDependencies": [
        {
            "name": "label",
            "registryId": "shadcn",
            "registryItemUrl": "label",
            "docsUrl": "https://ui.shadcn.com/docs/components/label"
        },
        {
            "name": "select",
            "registryId": "shadcn",
            "registryItemUrl": "select",
            "docsUrl": "https://ui.shadcn.com/docs/components/select"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "careers"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "May 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": false,
    "slug": "careers8",
    "collection": "block",
    "group": "careers",
    "code": "\"use client\";\n\nimport { useState } from \"react\";\n\nimport { Label } from \"@/components/ui/label\";\nimport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\n\nconst JOBS = [\n  {\n    category: \"Engineering & Development\",\n    openings: [\n      {\n        title: \"Software Engineer\",\n        location: \"San Francisco, CA | Remote\",\n        link: \"#\",\n      },\n      {\n        title: \"Backend Developer\",\n        location: \"San Francisco, CA | Remote\",\n        link: \"#\",\n      },\n    ],\n  },\n  {\n    category: \"Product Management\",\n    openings: [\n      {\n        title: \"Product Manager\",\n        location: \"Sydney, Australia\",\n        link: \"#\",\n      },\n      {\n        title: \"Product Owner\",\n        location: \"Sydney, Australia\",\n        link: \"#\",\n      },\n      {\n        title: \"Product Data Management Specialist\",\n        location: \"Sydney, Australia | Remote\",\n        link: \"#\",\n      },\n      {\n        title: \"Associate Product Manager\",\n        location: \"Sydney, Australia | Remote\",\n        link: \"#\",\n      },\n      {\n        title: \"Mobile Product Manager\",\n        location: \"Sydney, Australia | Remote\",\n        link: \"#\",\n      },\n      {\n        title: \"AI Product Manager\",\n        location: \"Sydney, Australia | Remote\",\n        link: \"#\",\n      },\n    ],\n  },\n  {\n    category: \"Design & User Experience\",\n    openings: [\n      {\n        title: \"UX Designer\",\n        location: \"Sydney, Australia\",\n        link: \"#\",\n      },\n    ],\n  },\n  {\n    category: \"Sales & Marketing\",\n    openings: [\n      {\n        title: \"Sales Executive\",\n        location: \"Sydney, Australia\",\n        link: \"#\",\n      },\n    ],\n  },\n  {\n    category: \"IT & Infrastructure\",\n    openings: [\n      {\n        title: \"IT Support\",\n        location: \"Sydney, Australia\",\n        link: \"#\",\n      },\n      {\n        title: \"System Administrator\",\n        location: \"Sydney, Australia\",\n        link: \"#\",\n      },\n      {\n        title: \"Network Engineer\",\n        location: \"Sydney, Australia\",\n        link: \"#\",\n      },\n    ],\n  },\n];\n\nconst options = [\n  {\n    label: \"All Departments\",\n    value: \"all\",\n  },\n  {\n    label: \"Engineering & Development\",\n    value: \"engineering_&_development\",\n  },\n  {\n    label: \"Product Management\",\n    value: \"product_management\",\n  },\n  {\n    label: \"Design & User Experience\",\n    value: \"design_&_user_experience\",\n  },\n  {\n    label: \"Sales & Marketing\",\n    value: \"sales_&_marketing\",\n  },\n  {\n    label: \"IT & Infrastructure\",\n    value: \"IT_&_infrastructure\",\n  },\n];\n\nconst Careers8 = () => {\n  const [filterValue, setFilterValue] = useState(options[0].value);\n\n  const filterJobsByCategory = (category: string) => {\n    if (category === \"All Departments\") return JOBS;\n    return JOBS.filter((job) => job.category === category);\n  };\n\n  const renderJobs = () => {\n    const option = options.filter((opt) => opt.value == filterValue);\n    const jobs = filterJobsByCategory(option[0].label);\n    return (\n      <>\n        {jobs.map((job, i) => (\n          <div\n            key={`job-${job.category}-${i}`}\n            className=\"flex w-full flex-col justify-start gap-10\"\n          >\n            <div className=\"text-4xl leading-none font-semibold\">\n              {job.category}\n            </div>\n            <div className=\"grid gap-5 md:grid-cols-2 lg:grid-cols-3\">\n              {job.openings.map((opening) => (\n                <a\n                  key={`job-${opening.title}`}\n                  href={opening.link}\n                  className=\"block rounded-md bg-muted p-5 transition-colors hover:bg-foreground/10\"\n                >\n                  <div className=\"mb-1 text-lg leading-normal font-semibold\">\n                    {opening.title}\n                  </div>\n                  <div className=\"text-sm leading-normal text-muted-foreground\">\n                    {opening.location}\n                  </div>\n                </a>\n              ))}\n            </div>\n          </div>\n        ))}\n      </>\n    );\n  };\n\n  return (\n    <section className=\"py-32\">\n      <div className=\"container\">\n        <div className=\"flex w-full flex-col gap-14\">\n          <h2 className=\"text-5xl leading-[1.3] font-semibold\">\n            Open Positions\n          </h2>\n          <div className=\"flex flex-wrap items-center justify-start gap-5\">\n            <Label\n              htmlFor=\"terms\"\n              className=\"text-base leading-normal font-semibold text-muted-foreground\"\n            >\n              Filter\n            </Label>\n            <Select\n              value={filterValue}\n              onValueChange={(value) => setFilterValue(value)}\n            >\n              <SelectTrigger className=\"w-[15.625rem]\">\n                <SelectValue placeholder=\"Select a category\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectGroup>\n                  {options.map((opt) => (\n                    <SelectItem key={opt.value} value={opt.value}>\n                      {opt.label}\n                    </SelectItem>\n                  ))}\n                </SelectGroup>\n              </SelectContent>\n            </Select>\n          </div>\n          <div className=\"flex flex-col gap-16\">{renderJobs()}</div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport { Careers8 };\n"
}