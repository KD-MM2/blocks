{
    "id": "compare6",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "compare6.jpg",
    "thumbnail": "compare6-4x3.webp",
    "description": "A component displaying a comparative analysis of models in a table with tabs for model selection. Features statue indicators and fixed columns.",
    "createdAt": "2025-03-30T02:38:45.771Z",
    "dependencies": [
        "lucide-react",
        "react"
    ],
    "registryDependencies": [
        {
            "name": "table",
            "registryId": "shadcn",
            "registryItemUrl": "table",
            "docsUrl": "https://ui.shadcn.com/docs/components/table"
        },
        {
            "name": "tabs",
            "registryId": "shadcn",
            "registryItemUrl": "tabs",
            "docsUrl": "https://ui.shadcn.com/docs/components/tabs"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "compare"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Apr 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": false,
    "slug": "compare6",
    "collection": "block",
    "group": "compare",
    "code": "\"use client\";\n\nimport { CircleCheck, CircleMinus, CircleX } from \"lucide-react\";\nimport { useState } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { Tabs, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\nconst Compare6 = () => {\n  const comparisonData = {\n    features: [\n      \"Initial cost\",\n      \"Scalability\",\n      \"Performance\",\n      \"Maintenance\",\n      \"Data recovery\",\n      \"Lifespan\",\n    ],\n    models: [\n      {\n        name: \"SSD\",\n        attributes: [\n          { value: \"Medium to high\", status: \"negative\" },\n          { value: \"Limited by size\", status: \"neutral\" },\n          { value: \"Very fast\", status: \"positive\" },\n          { value: \"Low maintenance\", status: \"positive\" },\n          { value: \"Challenging\", status: \"negative\" },\n          { value: \"5-7 years\", status: \"neutral\" },\n        ],\n      },\n      {\n        name: \"Cloud Storage\",\n        attributes: [\n          { value: \"Pay-as-you-go\", status: \"positive\" },\n          { value: \"Unlimited scaling\", status: \"positive\" },\n          { value: \"Depends on connection\", status: \"neutral\" },\n          { value: \"Managed service\", status: \"positive\" },\n          { value: \"Provider dependent\", status: \"neutral\" },\n          { value: \"Indefinite\", status: \"positive\" },\n        ],\n      },\n      {\n        name: \"NAS\",\n        attributes: [\n          { value: \"High upfront\", status: \"negative\" },\n          { value: \"Expandable\", status: \"positive\" },\n          { value: \"Network limited\", status: \"neutral\" },\n          { value: \"Regular upkeep\", status: \"negative\" },\n          { value: \"Built-in redundancy\", status: \"positive\" },\n          { value: \"7-10 years\", status: \"positive\" },\n        ],\n      },\n    ],\n  };\n\n  const [selectedTab, setSelectedTab] = useState(comparisonData.models[0].name);\n\n  return (\n    <section className=\"py-32\">\n      <div className=\"container\">\n        <Tabs\n          defaultValue={comparisonData.models[0].name}\n          onValueChange={setSelectedTab}\n          className=\"mb-6 block md:hidden\"\n        >\n          <TabsList className=\"w-full\">\n            {comparisonData.models.map((model, idx) => (\n              <TabsTrigger key={idx} value={model.name}>\n                {model.name}\n              </TabsTrigger>\n            ))}\n          </TabsList>\n        </Tabs>\n        <div className=\"[&>div]:overflow-visible\">\n          <Table className=\"table-fixed [&_td]:border [&_th]:border\">\n            <TableHeader>\n              <TableRow>\n                <TableHead className=\"sticky top-0 mb-24 w-1/4 bg-background p-5 text-base font-medium text-primary after:absolute after:right-0 after:-bottom-px after:left-0 after:h-px after:bg-border\">\n                  Feature\n                </TableHead>\n                {comparisonData.models.map((model, idx) => (\n                  <TableHead\n                    key={idx}\n                    className={cn(\n                      \"sticky top-0 mb-24 w-1/4 bg-background p-5 text-center text-base font-medium text-primary after:absolute after:right-0 after:-bottom-px after:left-0 after:h-px after:bg-border md:table-cell\",\n                      model.name !== selectedTab ? \"hidden\" : \"\",\n                    )}\n                  >\n                    {model.name}\n                  </TableHead>\n                ))}\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {comparisonData.features.map((feature, rowIdx) => (\n                <TableRow key={rowIdx}>\n                  <TableCell className=\"p-5 font-semibold whitespace-normal\">\n                    {feature}\n                  </TableCell>\n                  {comparisonData.models.map((model, colIdx) => (\n                    <TableCell\n                      key={colIdx}\n                      className={cn(\n                        \"p-5 text-center whitespace-normal md:table-cell\",\n                        model.name !== selectedTab ? \"hidden\" : \"\",\n                      )}\n                    >\n                      <div className=\"flex flex-col items-center gap-1 text-muted-foreground\">\n                        {model.attributes[rowIdx].status === \"positive\" && (\n                          <span className=\"flex size-8 items-center justify-center rounded-full border border-green-200 bg-green-100\">\n                            <CircleCheck className=\"size-4 text-green-700\" />\n                          </span>\n                        )}\n                        {model.attributes[rowIdx].status === \"negative\" && (\n                          <span className=\"flex size-8 items-center justify-center rounded-full border border-red-200 bg-red-100\">\n                            <CircleX className=\"size-4 text-red-700\" />\n                          </span>\n                        )}\n                        {model.attributes[rowIdx].status === \"neutral\" && (\n                          <span className=\"flex size-8 items-center justify-center rounded-full border border-amber-200 bg-amber-100\">\n                            <CircleMinus className=\"size-4 text-amber-700\" />\n                          </span>\n                        )}\n\n                        {model.attributes[rowIdx].value}\n                      </div>\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport { Compare6 };\n"
}