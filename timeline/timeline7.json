{
    "id": "timeline7",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "timeline7.jpg",
    "thumbnail": "timeline7-4x3.webp",
    "description": "A component with a stepper UI to guide through a process, featuring dynamic progress indication, navigational buttons, and transition animations.",
    "createdAt": "2025-03-16T01:37:40.426Z",
    "dependencies": [
        "framer-motion",
        "lucide-react",
        "react"
    ],
    "registryDependencies": [
        {
            "name": "button",
            "registryId": "shadcn",
            "registryItemUrl": "button",
            "docsUrl": "https://ui.shadcn.com/docs/components/button"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "timeline"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Apr 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": true,
    "slug": "timeline7",
    "collection": "block",
    "group": "timeline",
    "code": "\"use client\";\n\nimport { motion } from \"framer-motion\";\nimport { Check, ChevronLeft, ChevronRight, Circle } from \"lucide-react\";\nimport React, { useState } from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\n\ninterface StepProps {\n  title: string;\n  imageSrc: string;\n  description: string;\n}\n\nconst steps: StepProps[] = [\n  {\n    title: \"Introduction\",\n    imageSrc: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-1.svg\",\n    description:\n      \"Welcome to our step-by-step guide. This introduction will help you get started with the process and understand what to expect.\",\n  },\n  {\n    title: \"Personal Information\",\n    imageSrc: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-2.svg\",\n    description:\n      \"In this section, we'll collect some basic information about you to personalize your experience and provide better recommendations.\",\n  },\n  {\n    title: \"Address Details\",\n    imageSrc: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-3.svg\",\n    description:\n      \"Please provide your address details so we can deliver your products to the right location and calculate shipping costs.\",\n  },\n  {\n    title: \"Review & Submit\",\n    imageSrc: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-4.svg\",\n    description:\n      \"Take a moment to review all the information you've provided before finalizing your submission. You can go back to any step.\",\n  },\n];\n\nconst ProcessBar: React.FC<{\n  currentStep: number;\n  steps: StepProps[];\n}> = ({ currentStep, steps }) => (\n  <div className=\"relative w-full scale-75\">\n    <div className=\"flex items-center justify-between\">\n      {steps.map((step, index) => (\n        <React.Fragment key={step.title}>\n          <div className=\"flex flex-col items-center\">\n            <motion.div\n              className={`z-10 flex h-8 w-8 items-center justify-center rounded-full ${\n                index <= currentStep\n                  ? \"bg-neutral-800 text-white\"\n                  : \"bg-gray-200 text-white dark:bg-gray-800 dark:text-gray-600\"\n              }`}\n              animate={{ scale: 1.02 }}\n            >\n              {index < currentStep ? (\n                <Check size={17} />\n              ) : (\n                <Circle size={17} fill=\"white\" />\n              )}\n            </motion.div>\n          </div>\n          {index < steps.length - 1 && (\n            <div className=\"relative grow\">\n              <div className=\"absolute -top-1 h-1.5 w-full bg-muted\" />\n              <motion.div\n                className=\"absolute -top-1 h-1.5 w-full bg-primary\"\n                initial={{ width: \"0%\" }}\n                animate={{\n                  width: index < currentStep ? \"100%\" : \"0%\",\n                }}\n                transition={{ duration: 0.5, ease: \"easeInOut\" }}\n              />\n            </div>\n          )}\n        </React.Fragment>\n      ))}\n    </div>\n  </div>\n);\n\nconst StepperContent: React.FC<{ step: StepProps }> = ({ step }) => {\n  return (\n    <div className=\"my-4 flex min-h-[400px] w-full flex-col items-center justify-center overflow-hidden rounded-2xl bg-muted p-6 text-center\">\n      <motion.div\n        key={step.imageSrc}\n        initial={{ opacity: 0, y: -10 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.3 }}\n        className=\"flex h-[200px] w-[500px] items-center justify-center overflow-hidden\"\n      >\n        <img\n          src={step.imageSrc}\n          alt={step.title}\n          className=\"w-[500px]\"\n          onError={(e) => {\n            e.currentTarget.src = \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/placeholder-1.svg\";\n          }}\n        />\n      </motion.div>\n      <p className=\"mt-6 px-10 text-base leading-snug font-normal tracking-tight text-muted-foreground\">\n        {step.description}\n      </p>\n    </div>\n  );\n};\n\nconst NavButtons: React.FC<{\n  currentStep: number;\n  totalSteps: number;\n  handlePrev: () => void;\n  handleNext: () => void;\n}> = ({ handlePrev, handleNext }) => (\n  <div className=\"flex w-full justify-end gap-3 tracking-tight\">\n    <Button\n      onClick={handlePrev}\n      className=\"flex gap-2 transition-all ease-in-out hover:gap-4\"\n      variant=\"secondary\"\n    >\n      <ChevronLeft size={20} />\n      Previous\n    </Button>\n\n    <Button\n      onClick={handleNext}\n      className=\"flex gap-2 transition-all ease-in-out hover:gap-4\"\n      variant=\"default\"\n    >\n      Next\n      <ChevronRight size={20} />\n    </Button>\n  </div>\n);\n\nconst Timeline7: React.FC = () => {\n  const [currentStep, setCurrentStep] = useState(1);\n\n  const handleNext = () => {\n    setCurrentStep((prev) => Math.min(prev + 1, steps.length - 1));\n  };\n\n  const handlePrev = () => {\n    setCurrentStep((prev) => Math.max(prev - 1, 0));\n  };\n\n  return (\n    <section className=\"bg-background py-32\">\n      <div className=\"container flex max-w-2xl flex-col items-center gap-10 md:gap-0\">\n        <h1 className=\"mb-10 text-center text-6xl font-bold tracking-tighter text-foreground\">\n          Stepper\n        </h1>\n        <ProcessBar currentStep={currentStep} steps={steps} />\n        <StepperContent step={steps[currentStep]} />\n        <NavButtons\n          handlePrev={handlePrev}\n          handleNext={handleNext}\n          currentStep={currentStep}\n          totalSteps={steps.length}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport { Timeline7 };\n"
}