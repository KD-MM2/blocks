{
    "id": "feature248",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "feature248.jpg",
    "thumbnail": "feature248-4x3.webp",
    "description": "A centered text reveal component with a dark background, featuring a motivational message, adaptable to large screens up to 86rem wide.",
    "createdAt": [
        3,
        "2025-05-04T23:59:42.804Z"
    ],
    "dependencies": [
        "motion",
        "react"
    ],
    "registryDependencies": [],
    "attrs": {
        "type": "block",
        "group": [
            "feature"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Jun 2025"
        ],
        "registryIds": []
    },
    "figma": true,
    "slug": "feature248",
    "collection": "block",
    "group": "feature",
    "code": "\"use client\";\n\nimport { motion, MotionValue, useScroll, useTransform } from \"motion/react\";\nimport React from \"react\";\nimport { ComponentPropsWithoutRef, FC, ReactNode, useRef } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Feature248 = () => {\n  return (\n    <section className=\"dark bg-background py-32\">\n      <div className=\"container flex flex-col items-center justify-center\">\n        <TextReveal className=\"font-medium xl:text-3xl\" maxWidth=\"86rem\">\n          And the coolest part? This is just the beginning \u2014 there&apos;s so\n          much more coming your way. From exciting features to game-changing\n          updates, we&apos;re just getting started. Stay tuned \u2014 the best is yet\n          to come. Big ideas are turning into reality, and you&apos;re at the\n          heart of it all. Get ready to experience what&apos;s next.\n        </TextReveal>\n      </div>\n    </section>\n  );\n};\n\nexport { Feature248 };\n\n\n// Below is the modified component from Magic UI\n// Original source: https://magicui.design/docs/components/text-reveal\n// Modified to follow our coding standards and design system\n// We respect copyright and attribution to the original creators\n\nexport interface TextRevealProps extends ComponentPropsWithoutRef<\"div\"> {\n  children: string;\n  title?: string;\n  maxWidth?: string;\n}\n\nexport const TextReveal: FC<TextRevealProps> = ({\n  children,\n  title,\n  className,\n  maxWidth,\n}) => {\n  const targetRef = useRef<HTMLDivElement | null>(null);\n  const { scrollYProgress } = useScroll({\n    target: targetRef,\n  });\n\n  if (typeof children !== \"string\") {\n    throw new Error(\"TextReveal: children must be a string\");\n  }\n\n  const words = children.split(\" \");\n\n  return (\n    <div\n      ref={targetRef}\n      className={cn(\"relative z-0 h-[200vh]\", className)}\n      style={{ maxWidth: maxWidth || \"56rem\" }}\n    >\n      <div className=\"sticky top-0 mx-auto flex h-[50%] items-center bg-transparent px-[1rem] py-[5rem]\">\n        <div ref={targetRef} className=\"flex flex-col justify-center\">\n          <span className=\"text-foreground text-center text-lg font-medium tracking-tight\">\n            {title}\n          </span>\n          <span\n            className={cn(\n              \"flex flex-wrap p-5 text-2xl font-semibold text-black/20 md:p-8 md:text-3xl lg:p-10 lg:text-4xl xl:text-5xl dark:text-white/20\",\n              className,\n            )}\n          >\n            {words.map((word, i) => {\n              const start = i / words.length;\n              const end = start + 1 / words.length;\n              return (\n                <Word key={i} progress={scrollYProgress} range={[start, end]}>\n                  {word}\n                </Word>\n              );\n            })}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface WordProps {\n  children: ReactNode;\n  progress: MotionValue<number>;\n  range: [number, number];\n}\n\nconst Word: FC<WordProps> = ({ children, progress, range }) => {\n  const opacity = useTransform(progress, range, [0, 1]);\n  return (\n    <span className=\"xl:lg-3 relative mx-1 lg:mx-1.5\">\n      <span className=\"absolute opacity-30\">{children}</span>\n      <motion.span\n        style={{ opacity: opacity }}\n        className=\"text-black dark:text-white\"\n      >\n        {children}\n      </motion.span>\n    </span>\n  );\n};\n"
}