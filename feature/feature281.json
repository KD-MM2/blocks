{
    "id": "feature281",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "feature281.jpg",
    "thumbnail": "feature281-4x3.webp",
    "description": "A testimonial display component featuring an animated card stack with user feedback, adjustable through attributes like offset and scale. Includes a \"Read More\" button.",
    "createdAt": [
        3,
        "2025-08-28T06:50:57.544Z"
    ],
    "dependencies": [
        "framer-motion",
        "lucide-react",
        "react",
        "react-icons"
    ],
    "registryDependencies": [
        {
            "name": "avatar",
            "registryId": "shadcn",
            "registryItemUrl": "avatar",
            "docsUrl": "https://ui.shadcn.com/docs/components/avatar"
        },
        {
            "name": "button",
            "registryId": "shadcn",
            "registryItemUrl": "button",
            "docsUrl": "https://ui.shadcn.com/docs/components/button"
        }
    ],
    "attrs": {
        "type": "block",
        "group": [
            "feature"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Aug 2025"
        ],
        "registryIds": [
            "shadcn"
        ]
    },
    "figma": true,
    "slug": "feature281",
    "collection": "block",
    "group": "feature",
    "code": "\"use client\";\nimport { motion } from \"framer-motion\";\nimport { ArrowRight } from \"lucide-react\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n  FaApple,\n  FaGoogle,\n  FaLinkedin,\n  FaMicrosoft,\n  FaTwitter,\n} from \"react-icons/fa\";\n\nimport { cn } from \"@/lib/utils\"; \n\nimport { Avatar, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\n\nconst Feature281 = () => {\n  return (\n    <section className=\"h-full w-screen overflow-hidden py-32\">\n      <div className=\"container flex w-full max-w-6xl flex-col items-center justify-center\">\n        <div className=\"relative flex h-full flex-col items-center justify-center gap-8 text-center\">\n          <p className=\"bg-muted rounded-full px-4 py-1 text-xs font-medium uppercase\">\n            TESTIMONIALS\n          </p>\n          <h1 className=\"w-full text-5xl font-medium font-semibold tracking-tighter lg:text-6xl\">\n            What our Users say\n          </h1>\n        </div>\n        <div className=\"mt-24 flex items-center justify-center\">\n          <CardStack items={CARDS} />\n        </div>\n        <Button variant=\"ghost\" className=\"group/btn mt-8 w-fit\" asChild>\n          <a href=\"#\">\n            Read More{\" \"}\n            <ArrowRight className=\"ml-2 size-4 transition-transform group-hover/btn:translate-x-1\" />\n          </a>\n        </Button>\n      </div>\n    </section>\n  );\n};\n\nexport { Feature281 };\n\nexport const Highlight = ({\n  children,\n  className,\n}: {\n  children: React.ReactNode;\n  className?: string;\n}) => {\n  return (\n    <motion.span\n      className={cn(\n        \"bg-emerald-100 px-1 py-0.5 font-bold text-emerald-700 dark:bg-emerald-700/[0.2] dark:text-emerald-500\",\n        className,\n      )}\n    >\n      {children}\n    </motion.span>\n  );\n};\n\nconst CARDS = [\n  {\n    id: 0,\n    name: \"Sarah Chen\",\n    designation: \"Product Manager\",\n    userImage: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/guri3/avatar1.png\",\n    companyIcon: FaApple,\n    content: (\n      <p>\n        The implementation was incredibly smooth.{\" \"}\n        <Highlight>We deployed in under 2 hours</Highlight> and the team loves\n        how intuitive the interface is. The responsive design works perfectly\n        across all devices.\n      </p>\n    ),\n  },\n  {\n    id: 1,\n    name: \"Marcus Rodriguez\",\n    designation: \"Frontend Developer\",\n    userImage: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/guri3/avatar2.png\",\n    companyIcon: FaLinkedin,\n    content: (\n      <p>\n        As a developer, I appreciate the clean code structure.{\" \"}\n        <Highlight>Easy to customize</Highlight> and the documentation is\n        comprehensive. The performance optimizations are noticeable in\n        production.\n      </p>\n    ),\n  },\n  {\n    id: 2,\n    name: \"Emily Watson\",\n    designation: \"UX Designer\",\n    userImage: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/guri3/avatar3.png\",\n    companyIcon: FaTwitter,\n    content: (\n      <p>\n        The accessibility features are outstanding.{\" \"}\n        <Highlight>WCAG compliant out of the box</Highlight> and the design\n        system is consistent. Our users with disabilities have given us\n        excellent feedback.\n      </p>\n    ),\n  },\n  {\n    id: 3,\n    name: \"David Kim\",\n    designation: \"Senior Engineer\",\n    userImage: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/guri3/avatar4.png\",\n    companyIcon: FaGoogle,\n    content: (\n      <p>\n        The performance is exceptional.{\" \"}\n        <Highlight>Lightning fast loading times</Highlight> and the SEO\n        optimizations have significantly improved our search rankings. Highly\n        recommended for any modern web application.\n      </p>\n    ),\n  },\n  {\n    id: 4,\n    name: \"Lisa Thompson\",\n    designation: \"Marketing Director\",\n    userImage: \"https://deifkwefumgah.cloudfront.net/shadcnblocks/block/guri3/avatar5.png\",\n    companyIcon: FaMicrosoft,\n    content: (\n      <p>\n        Perfect for our enterprise needs.{\" \"}\n        <Highlight>Scalable and secure</Highlight> with excellent integration\n        capabilities. The analytics dashboard provides invaluable insights for\n        our marketing campaigns.\n      </p>\n    ),\n  },\n];\n\ntype Card = {\n  id: number;\n  name: string;\n  designation: string;\n  userImage: string;\n  companyIcon: React.ComponentType<{ className?: string }>;\n  content: React.ReactNode;\n};\n\n\n// Below is the modified component from Aceternity UI\n// Original source: npx shadcn@latest add https://ui.aceternity.com/registry/card-stack.json\n// Modified to follow our coding standards and design system\n// We respect copyright and attribution to the original creators\n\nconst CardStack = ({\n  items,\n  offset,\n  scaleFactor,\n}: {\n  items: Card[];\n  offset?: number;\n  scaleFactor?: number;\n}) => {\n  let interval: NodeJS.Timeout;\n  const CARD_OFFSET = offset || 10;\n  const SCALE_FACTOR = scaleFactor || 0.06;\n  const [cards, setCards] = useState<Card[]>(items);\n\n  useEffect(() => {\n    startFlipping();\n\n    return () => clearInterval(interval);\n  }, []);\n  const startFlipping = () => {\n    interval = setInterval(() => {\n      setCards((prevCards: Card[]) => {\n        const newArray = [...prevCards]; // create a copy of the array\n        newArray.unshift(newArray.pop()!); // move the last element to the front\n        return newArray;\n      });\n    }, 5000);\n  };\n\n  return (\n    <div className=\"relative h-60 w-96\">\n      {cards.map((card, index) => {\n        const CompanyIcon = card.companyIcon;\n        return (\n          <motion.div\n            key={card.id}\n            className=\"absolute flex h-60 w-96 flex-col justify-between rounded-3xl border border-neutral-200 bg-white p-4 shadow-xl shadow-black/[0.1] dark:border-white/[0.1] dark:bg-black dark:shadow-white/[0.05]\"\n            style={{\n              transformOrigin: \"top center\",\n            }}\n            animate={{\n              top: index * -CARD_OFFSET,\n              scale: 1 - index * SCALE_FACTOR, // decrease scale for cards that are behind\n              zIndex: cards.length - index, //  decrease z-index for the cards that are behind\n            }}\n            transition={{\n              duration: 0.5,\n              type: \"spring\",\n              bounce: 0.3,\n            }}\n          >\n            <div className=\"font-normal text-neutral-700 dark:text-neutral-200\">\n              {card.content}\n            </div>\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2\">\n                <Avatar key={index} className=\"size-12\">\n                  <AvatarImage src={card.userImage} alt={card.name} />\n                </Avatar>\n                <div>\n                  <p className=\"font-medium\">{card.name}</p>\n                  <p className=\"text-muted-foreground/80\">{card.designation}</p>\n                </div>\n              </div>\n              <div className=\"bg-muted-foreground/15 flex size-10 items-center justify-center rounded-full\">\n                <CompanyIcon className=\"size-5\" />\n              </div>\n            </div>\n          </motion.div>\n        );\n      })}\n    </div>\n  );\n};\n"
}