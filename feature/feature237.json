{
    "id": "feature237",
    "access": "pro",
    "weight": 999,
    "disabled": false,
    "draft": false,
    "screenshot": "feature237.jpg",
    "thumbnail": "feature237-4x3.webp",
    "description": "This component displays a grid of cards detailing system features, each with metrics, status, and deployment info. Two-column layout on medium screens.",
    "createdAt": "2025-03-16T01:37:40.383Z",
    "dependencies": [
        "lucide-react",
        "react"
    ],
    "registryDependencies": [],
    "attrs": {
        "type": "block",
        "group": [
            "feature"
        ],
        "price": [
            "pro"
        ],
        "release": [
            "Apr 2025"
        ],
        "registryIds": []
    },
    "figma": true,
    "slug": "feature237",
    "collection": "block",
    "group": "feature",
    "code": "import type { LucideIcon } from \"lucide-react\";\nimport {\n  ArrowUpRight,\n  ChartBarIcon,\n  ChartNetwork,\n  CheckCircle2,\n  Clock,\n  Cpu,\n  DollarSign,\n  LocateFixed,\n  Server,\n  Settings,\n  UserIcon,\n  Zap,\n} from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\ninterface CardData {\n  icon: React.ElementType;\n  title: string;\n  description: string;\n  href: string;\n  metrics: {\n    value: string;\n    label: string;\n    trend: number;\n    secondaryMetric?: {\n      value: string;\n      label: string;\n    };\n  };\n  status: {\n    label: \"Active\" | \"In Progress\" | \"Optimizing\";\n    color: \"text-green-500\" | \"text-yellow-500\" | \"text-blue-500\";\n    icon: LucideIcon;\n    lastUpdated: string;\n  };\n  performance: {\n    cpu: string;\n    memory: string;\n    latency: string;\n  };\n  deployment: {\n    version: string;\n    environment: \"production\" | \"staging\" | \"development\";\n    region: string;\n  };\n}\n\nconst CARDS: CardData[] = [\n  {\n    icon: DollarSign,\n    title: \"Revenue Optimization\",\n    description:\n      \"AI-powered revenue optimization engine with real-time market analysis and dynamic pricing strategies.\",\n    href: \"#revenue\",\n    metrics: {\n      value: \"99.9%\",\n      label: \"Accuracy Rate\",\n      trend: 12.5,\n      secondaryMetric: {\n        value: \"2.3ms\",\n        label: \"Avg. Response Time\",\n      },\n    },\n    status: {\n      label: \"Active\",\n      color: \"text-green-500\",\n      icon: CheckCircle2,\n      lastUpdated: \"2024-03-21T15:30:00Z\",\n    },\n    performance: {\n      cpu: \"45%\",\n      memory: \"2.8GB\",\n      latency: \"120ms\",\n    },\n    deployment: {\n      version: \"v2.3.4\",\n      environment: \"production\",\n      region: \"us-west-2\",\n    },\n  },\n  {\n    icon: ChartBarIcon,\n    title: \"Performance Analytics\",\n    description:\n      \"Advanced analytics platform processing over 1M events per second with distributed computing.\",\n    href: \"#analytics\",\n    metrics: {\n      value: \"1.2ms\",\n      label: \"Response Time\",\n      trend: -8.3,\n      secondaryMetric: {\n        value: \"850k\",\n        label: \"Req/sec\",\n      },\n    },\n    status: {\n      label: \"Optimizing\",\n      color: \"text-blue-500\",\n      icon: Zap,\n      lastUpdated: \"2024-03-21T15:28:00Z\",\n    },\n    performance: {\n      cpu: \"78%\",\n      memory: \"12.4GB\",\n      latency: \"1.2ms\",\n    },\n    deployment: {\n      version: \"v3.1.0\",\n      environment: \"production\",\n      region: \"eu-west-1\",\n    },\n  },\n  {\n    icon: Settings,\n    title: \"System Architecture\",\n    description:\n      \"Cloud-native infrastructure with auto-scaling capabilities and multi-region deployment.\",\n    href: \"#architecture\",\n    metrics: {\n      value: \"99.99%\",\n      label: \"Uptime\",\n      trend: 2.1,\n      secondaryMetric: {\n        value: \"12\",\n        label: \"Active Regions\",\n      },\n    },\n    status: {\n      label: \"Active\",\n      color: \"text-green-500\",\n      icon: CheckCircle2,\n      lastUpdated: \"2024-03-21T15:25:00Z\",\n    },\n    performance: {\n      cpu: \"65%\",\n      memory: \"32GB\",\n      latency: \"85ms\",\n    },\n    deployment: {\n      version: \"v2.8.1\",\n      environment: \"production\",\n      region: \"global\",\n    },\n  },\n  {\n    icon: UserIcon,\n    title: \"User Authentication\",\n    description:\n      \"Zero-trust security model with biometric authentication and behavioral analysis.\",\n    href: \"#security\",\n    metrics: {\n      value: \"0.001%\",\n      label: \"False Positive Rate\",\n      trend: -15.7,\n      secondaryMetric: {\n        value: \"50ms\",\n        label: \"Auth Time\",\n      },\n    },\n    status: {\n      label: \"In Progress\",\n      color: \"text-yellow-500\",\n      icon: Clock,\n      lastUpdated: \"2024-03-21T15:15:00Z\",\n    },\n    performance: {\n      cpu: \"35%\",\n      memory: \"4.2GB\",\n      latency: \"50ms\",\n    },\n    deployment: {\n      version: \"v1.9.3\",\n      environment: \"staging\",\n      region: \"us-east-1\",\n    },\n  },\n  {\n    icon: ChartNetwork,\n    title: \"Network Intelligence\",\n    description:\n      \"Self-healing network infrastructure with predictive maintenance and anomaly detection.\",\n    href: \"#network\",\n    metrics: {\n      value: \"500TB\",\n      label: \"Daily Processing\",\n      trend: 25.4,\n      secondaryMetric: {\n        value: \"99.999%\",\n        label: \"Availability\",\n      },\n    },\n    status: {\n      label: \"Active\",\n      color: \"text-green-500\",\n      icon: CheckCircle2,\n      lastUpdated: \"2024-03-21T15:29:00Z\",\n    },\n    performance: {\n      cpu: \"82%\",\n      memory: \"128GB\",\n      latency: \"5ms\",\n    },\n    deployment: {\n      version: \"v4.2.0\",\n      environment: \"production\",\n      region: \"multi-region\",\n    },\n  },\n  {\n    icon: LocateFixed,\n    title: \"Location Services\",\n    description:\n      \"High-precision geolocation services with indoor mapping and spatial analytics.\",\n    href: \"#location\",\n    metrics: {\n      value: \"\u00b10.5m\",\n      label: \"Accuracy\",\n      trend: 5.8,\n      secondaryMetric: {\n        value: \"10M\",\n        label: \"Daily Users\",\n      },\n    },\n    status: {\n      label: \"Optimizing\",\n      color: \"text-blue-500\",\n      icon: Zap,\n      lastUpdated: \"2024-03-21T15:20:00Z\",\n    },\n    performance: {\n      cpu: \"55%\",\n      memory: \"16GB\",\n      latency: \"150ms\",\n    },\n    deployment: {\n      version: \"v2.4.5\",\n      environment: \"production\",\n      region: \"global\",\n    },\n  },\n];\n\nconst Feature237 = () => {\n  return (\n    <section className=\"bg-background py-32\">\n      <div className=\"container\">\n        <h1 className=\"mb-10 text-center text-3xl font-bold tracking-tighter text-foreground lg:text-6xl\">\n          System Capabilities\n        </h1>\n        <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2\">\n          {CARDS.map((card, index) => (\n            <a key={index} href={card.href} className=\"group block h-full\">\n              <div className=\"flex h-full flex-col rounded-xl border bg-card p-6 transition-all duration-200 hover:border-primary hover:shadow-lg\">\n                <div className=\"flex h-full flex-col justify-between space-y-4\">\n                  <div>\n                    <div className=\"flex items-start justify-between\">\n                      <div>\n                        <h3 className=\"text-xl text-foreground transition-colors duration-200 group-hover:text-primary\">\n                          {card.title}\n                        </h3>\n                        <div className=\"flex items-center space-x-2\">\n                          <card.status.icon\n                            className={cn(\"h-4 w-4\", card.status.color)}\n                          />\n                          <span\n                            className={cn(\n                              \"font-mono text-sm\",\n                              card.status.color,\n                            )}\n                          >\n                            {card.status.label}\n                          </span>\n                          <span className=\"font-mono text-xs text-muted-foreground\">\n                            [\n                            {new Date(\n                              card.status.lastUpdated,\n                            ).toLocaleTimeString()}\n                            ]\n                          </span>\n                        </div>\n                      </div>\n                      <ArrowUpRight className=\"h-5 w-5 text-muted-foreground transition-transform duration-200 group-hover:translate-x-1 group-hover:-translate-y-1 group-hover:text-primary\" />\n                    </div>\n\n                    <p className=\"mt-4 text-muted-foreground\">\n                      {card.description}\n                    </p>\n                  </div>\n\n                  <div className=\"space-y-4\">\n                    <div className=\"grid grid-cols-2 gap-4\">\n                      <div>\n                        <div className=\"font-mono text-xl font-bold\">\n                          {card.metrics.value}\n                        </div>\n                        <div className=\"font-mono text-sm text-muted-foreground\">\n                          {card.metrics.label}\n                        </div>\n                        <div\n                          className={cn(\n                            \"font-mono text-sm\",\n                            card.metrics.trend > 0\n                              ? \"text-green-500\"\n                              : \"text-red-500\",\n                          )}\n                        >\n                          {card.metrics.trend > 0 ? \"+\" : \"\"}\n                          {card.metrics.trend}%\n                        </div>\n                      </div>\n                      {card.metrics.secondaryMetric && (\n                        <div>\n                          <div className=\"font-mono text-xl font-bold\">\n                            {card.metrics.secondaryMetric.value}\n                          </div>\n                          <div className=\"font-mono text-sm text-muted-foreground\">\n                            {card.metrics.secondaryMetric.label}\n                          </div>\n                        </div>\n                      )}\n                    </div>\n\n                    <div className=\"grid grid-cols-3 gap-2 border-t pt-4\">\n                      <div className=\"flex items-center space-x-2\">\n                        <Cpu className=\"h-4 w-4 text-muted-foreground\" />\n                        <span className=\"font-mono text-xs\">\n                          {card.performance.cpu}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <Server className=\"h-4 w-4 text-muted-foreground\" />\n                        <span className=\"font-mono text-xs\">\n                          {card.performance.memory}\n                        </span>\n                      </div>\n                      <div className=\"flex items-center space-x-2\">\n                        <Zap className=\"h-4 w-4 text-muted-foreground\" />\n                        <span className=\"font-mono text-xs\">\n                          {card.performance.latency}\n                        </span>\n                      </div>\n                    </div>\n\n                    <div className=\"border-t pt-4\">\n                      <div className=\"flex items-center space-x-2 font-mono text-xs text-muted-foreground\">\n                        <span>{card.deployment.version}</span>\n                        <span>\u2022</span>\n                        <span className=\"uppercase\">\n                          {card.deployment.environment}\n                        </span>\n                        <span>\u2022</span>\n                        <span>{card.deployment.region}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </a>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport { Feature237 };\n"
}